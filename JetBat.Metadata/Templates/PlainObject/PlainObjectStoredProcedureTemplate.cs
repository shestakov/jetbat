// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 10.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace JetBat.Metadata.Templates.PlainObject
{
    using JetBat.DatabaseSchema;
    using System;
    
    
    #line 1 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")]
    public partial class PlainObjectStoredProcedureTemplate : PlainObjectStoredProcedureTemplateBase
    {
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
        public virtual string TransformText()
        {
            this.GenerationEnvironment = null;
            this.Write("\r\n");
            this.Write("SET NOCOUNT ON\r\nSET NOEXEC OFF\r\nUSE [");
            
            #line 7 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DatabaseName));
            
            #line default
            #line hidden
            this.Write("]\r\nGO\r\n\r\n--region Делегаты\r\n\r\n--region BeforeInsert\r\n");
            
            #line 13 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

if (BeforeInsert)
{

            
            #line default
            #line hidden
            this.Write("IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N\'");
            
            #line 17 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("BeforeInsert")));
            
            #line default
            #line hidden
            this.Write("\') AND OBJECTPROPERTY(id, N\'IsProcedure\') = 1)\r\nEXEC\r\n(\'\r\nCREATE PROCEDURE [dbo]." +
                    "[");
            
            #line 20 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("BeforeInsert")));
            
            #line default
            #line hidden
            this.Write("]\r\n\t");
            
            #line 21 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		//Первичный ключ
		str_and = "	";
		foreach (TableColumnSchema column in tableSchema.PrimaryKey)
		{
			Write(str_and + GetParameterDeclaration2(column, true));
			str_and = "," + Environment.NewLine;
		}

		//Метка даты и времени
		if (dateTimeMarkColumnSchema != null)
		{
			Write(str_and + "	" + GetParameterDeclaration2(dateTimeMarkColumnSchema, true));
			str_and = "," + Environment.NewLine;
		}

		//Информативные параметры
		str_and = "," + Environment.NewLine;
		foreach (TableColumnSchema column in tableSchema.Columns)
			if
			(
				(
					!column.IsPrimaryKeyMember &&
					!(dateTimeMarkColumnSchema != null && column.Name == dateTimeMarkColumnSchema.Name) &&
					viewSchema.Columns.Contains(column.Name) &&
					!ColumnIsIgnored(column.Name) &&
					!ColumnIsReadOnly(column.Name)
				)
			)
			{
				Write(str_and + "	" + GetParameterDeclaration2(column, true));
				str_and = "," + Environment.NewLine;
			}
		Write("," + Environment.NewLine);
	
            
            #line default
            #line hidden
            this.Write(@"	@ErrorMessages XML OUTPUT
AS
BEGIN
--	DECLARE @ErrorList TABLE
--	(
--		Message VARCHAR(2000),
--		AttributeName VARCHAR(128) NULL,
--		AttributeFriendlyName VARCHAR(200) NULL,
--		Severity INT
--	)

--	INSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName, Severity)
--	SELECT
--		''Error Message'',
--		NULL,
--		NULL,
--		2

--SET @ErrorMessages =
--(
--	SELECT Message, AttributeName, AttributeFriendlyName, Severity
--	FROM @ErrorList AS EL
--	ORDER BY EL.Severity DESC, EL.AttributeName
--	FOR XML RAW(''row''), ROOT (''root'')
--)

	RETURN 0
END
')
GO
");
            
            #line 86 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

}

            
            #line default
            #line hidden
            this.Write("--endregion\r\n\r\n--region AfterInsert\r\n");
            
            #line 92 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

if (AfterInsert)
{

            
            #line default
            #line hidden
            this.Write("IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N\'");
            
            #line 96 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("AfterInsert")));
            
            #line default
            #line hidden
            this.Write("\') AND OBJECTPROPERTY(id, N\'IsProcedure\') = 1)\r\nEXEC\r\n(\'\r\nCREATE PROCEDURE [dbo]." +
                    "[");
            
            #line 99 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("AfterInsert")));
            
            #line default
            #line hidden
            this.Write("]\r\n\t");
            
            #line 100 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		//Первичный ключ
		str_and = "	";
		foreach (TableColumnSchema column in tableSchema.PrimaryKey)
		{
			Write(str_and + GetParameterDeclaration2(column, false));
			str_and = "," + Environment.NewLine;
		}

		//Метка даты и времени
		if (dateTimeMarkColumnSchema != null)
		{
			Write(str_and + "	" + GetParameterDeclaration2(dateTimeMarkColumnSchema, false));
			str_and = "," + Environment.NewLine;
		}
		
		//Информативные параметры
		str_and = "," + Environment.NewLine;
		foreach (TableColumnSchema column in tableSchema.Columns)
			if
			(
				(
					!column.IsPrimaryKeyMember &&
					!(dateTimeMarkColumnSchema != null && column.Name == dateTimeMarkColumnSchema.Name) &&
					viewSchema.Columns.Contains(column.Name) &&
					!ColumnIsIgnored(column.Name) &&
					!ColumnIsReadOnly(column.Name)
				)
			)
			{
				Write(str_and + "	" + GetParameterDeclaration2(column, false));
				str_and = "," + Environment.NewLine;
			}
		Write(Environment.NewLine);
	
            
            #line default
            #line hidden
            this.Write("AS\r\nBEGIN\r\n\tSET NOCOUNT ON\r\n\tRETURN 0\r\nEND\r\n\')\r\nGO\r\n");
            
            #line 142 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

}

            
            #line default
            #line hidden
            this.Write("--endregion\r\n\r\n--endregion \r\n");
            
            #line 148 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DatabaseSchema.StoredProcedures.Contains(GetProcedureName("Insert")) ? "ALTER" : "CREATE"));
            
            #line default
            #line hidden
            this.Write(" PROCEDURE dbo.");
            
            #line 148 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("Insert")));
            
            #line default
            #line hidden
            this.Write("\r\n(\r\n\t--region Объявление параметров\r\n\t");
            
            #line 151 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		//Первичный ключ
		str_and = "	";
		foreach (TableColumnSchema column in tableSchema.PrimaryKey)
		{
			Write(str_and + GetParameterDeclaration2(column, column.IsIdentity));
			str_and = "," + Environment.NewLine;
		}

		//Метка даты и времени
		if (dateTimeMarkColumnSchema != null)
		{
			Write(str_and + "	" + GetParameterDeclaration2(dateTimeMarkColumnSchema, true));
			str_and = "," + Environment.NewLine;
		}
		
		//Информативные параметры
		str_and = "," + Environment.NewLine;
		foreach (TableColumnSchema column in tableSchema.Columns)
			if
			(
				(
					!column.IsPrimaryKeyMember &&
					!(dateTimeMarkColumnSchema != null && column.Name == dateTimeMarkColumnSchema.Name) &&
					viewSchema.Columns.Contains(column.Name) &&
					!ColumnIsIgnored(column.Name) &&
					!ColumnIsReadOnly(column.Name)
				)
			)
			{
				Write(str_and + "	" + GetParameterDeclaration2(column, false));
				str_and = "," + Environment.NewLine;
			}
		Write("," + Environment.NewLine);
	
            
            #line default
            #line hidden
            this.Write(@"	@ErrorMessages XML OUTPUT
	--endregion
)
AS
SET NOCOUNT ON

--region Объявление переменных
DECLARE @ObjectID INT
DECLARE @ErrorList TABLE
(
	Message VARCHAR(2000),
	AttributeName VARCHAR(128) NULL,
	AttributeFriendlyName VARCHAR(200) NULL,
	Severity INT
)
DECLARE @ErrorMessage NVARCHAR(4000)
DECLARE @ErrorSeverity INT
DECLARE @ErrorState INT
--endregion

--region Вызов BeforeInsert
");
            
            #line 207 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

if (BeforeInsert)
{

            
            #line default
            #line hidden
            this.Write("BEGIN TRY\r\n\tEXEC dbo.");
            
            #line 212 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("BeforeInsert")));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 213 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		//Первичный ключ
		str_and = "";
		foreach (TableColumnSchema column in tableSchema.PrimaryKey)
		{
			Write(str_and + "		@" + column.Name + " = @" + column.Name + " OUTPUT");
			str_and = "," + Environment.NewLine;
		}

		//Метка даты и времени
		if (dateTimeMarkColumnSchema != null)
		{
			Write(str_and + "		@" + dateTimeMarkColumnSchema.Name + " = @" + dateTimeMarkColumnSchema.Name + " OUTPUT");
			str_and = "," + Environment.NewLine;
		}
		
		//Информативные параметры
		str_and = "," + Environment.NewLine;
		foreach (TableColumnSchema column in tableSchema.Columns)
			if
			(
				(
					!column.IsPrimaryKeyMember &&
					!(dateTimeMarkColumnSchema != null && column.Name == dateTimeMarkColumnSchema.Name) &&
					viewSchema.Columns.Contains(column.Name) &&
					!ColumnIsIgnored(column.Name) &&
					!ColumnIsReadOnly(column.Name)
				)
			)
			{
				Write(str_and + "		@" + column.Name + " = @" + column.Name + " OUTPUT");
				str_and = "," + Environment.NewLine;
			}
		Write("," + Environment.NewLine);
	
            
            #line default
            #line hidden
            this.Write(@"		@ErrorMessages = @ErrorMessages OUTPUT
END TRY
BEGIN CATCH
    SELECT 
        @ErrorMessage = ERROR_MESSAGE(),
        @ErrorSeverity = ERROR_SEVERITY(),
        @ErrorState = ERROR_STATE();
	
    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState)
	RETURN(-1)
END CATCH

INSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName, Severity)
SELECT b.value('@Message' , 'varchar(2000)') as Сообщение, 
	b.value('@AttributeName' , 'varchar(128)') as ИмяАтрибута,
	b.value('@AttributeFriendlyName' , 'varchar(200)') as ПсевдонимАтрибута,
	b.value('@Severity' , 'int') as СуровостьОшибки
FROM @ErrorMessages.nodes('/root/row') a(b)

IF (SELECT COUNT(0) FROM @ErrorList WHERE Severity > 1) > 0
BEGIN
	SET @ErrorMessages =
	(
		SELECT Message, AttributeName, AttributeFriendlyName, Severity
		FROM @ErrorList AS EL
		ORDER BY EL.Severity DESC, EL.AttributeName
		FOR XML RAW('row'), ROOT ('root')
	)
	RETURN -1
END
");
            
            #line 278 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

}

            
            #line default
            #line hidden
            this.Write("--endregion\r\n\r\n--region Проверки\r\nBEGIN TRY\r\n\t--region Проверка заполнения параме" +
                    "тров первичного ключа\r\n\t");
            
            #line 286 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		foreach (TableColumnSchema column in tableSchema.PrimaryKey)
			if (!column.IsIdentity) //specific for insert
			{
			
            
            #line default
            #line hidden
            this.Write("\tIF @");
            
            #line 291 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write(" IS NULL\r\n\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName," +
                    " Severity)\r\n\tSELECT\r\n\t\t\'Не задано значение атрибута: ");
            
            #line 294 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetAttributeAlias(column.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\'");
            
            #line 295 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\'");
            
            #line 296 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetAttributeAlias(column.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t2\r\n\t\t\t");
            
            #line 298 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\r\n\t--region Проверка заполнения параметра метки даты и времени\r\n\t");
            
            #line 304 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		if (dateTimeMarkColumnSchema != null)
		{
		
            
            #line default
            #line hidden
            this.Write("\tIF @");
            
            #line 308 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dateTimeMarkColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" IS NULL\r\n\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName," +
                    " Severity)\r\n\tSELECT\r\n\t\t\'Не задано значение атрибута: ");
            
            #line 311 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetAttributeAlias(dateTimeMarkColumnSchema.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\'");
            
            #line 312 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dateTimeMarkColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\'");
            
            #line 313 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetAttributeAlias(dateTimeMarkColumnSchema.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t2\r\n\t\t");
            
            #line 315 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\r\n\t--region Проверка заполнения параметров информативных атрибутов\r" +
                    "\n\t");
            
            #line 321 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		foreach (TableColumnSchema column in tableSchema.Columns)
			if
			(
				!column.IsPrimaryKeyMember &&
				!(dateTimeMarkColumnSchema != null && column.Name == dateTimeMarkColumnSchema.Name) &&
				!column.IsForeignKeyMember &&
				viewSchema.Columns.Contains(column.Name) &&
				!ColumnIsIgnored(column.Name) &&
				!ColumnIsReadOnly(column.Name) &&
				!ColumnAllowsDBNull(column.Name)
			)
			{
	
            
            #line default
            #line hidden
            this.Write("\tIF (@");
            
            #line 335 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write(" IS NULL) --AND ((SELECT IsNullable FROM Metadata_ObjectAttribute WHERE Name = \'");
            
            #line 335 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("\' AND ObjectID = @ObjectID) != 1)\r\n\t\tINSERT INTO @ErrorList (Message, AttributeNa" +
                    "me, AttributeFriendlyName, Severity)\r\n\t\tSELECT\r\n\t\t\t\'Не задано значение атрибута:" +
                    " ");
            
            #line 338 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetAttributeAlias(column.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\t\'");
            
            #line 339 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\t\'");
            
            #line 340 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetAttributeAlias(column.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\t2\r\n\t");
            
            #line 342 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\t\r\n\t--region Проверка заполнения параметров составных атрибутов\r\n\t");
            
            #line 348 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

	foreach	(ForeignKeySchema fk in tableSchema.OutgoingForeignKeys)
	{
		bool read_only = false;
		foreach (ForeignKeyColumnPairSchema fk_column in fk.ColumnPairs)
		{
			if (ColumnIsIgnored(fk_column.ForeignKeyColumnName) || ColumnIsReadOnly(fk_column.ForeignKeyColumnName))
			{
				read_only = true;
				break;
			}
		}
		
		bool required = false;
		foreach (ForeignKeyColumnPairSchema column in fk.ColumnPairs)
			if (!fk.ChildTable.Columns[column.ForeignKeyColumnName].AllowNull)
			{
				required = true;
				break;
			}
			
		if (!read_only && required && ForeignKeyIsIncludedIntoView2(fk))
		{
			str_and = "";
	
            
            #line default
            #line hidden
            this.Write("\tIF\r\n\t(\r\n\t\t");
            
            #line 375 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			foreach (ForeignKeyColumnPairSchema column in fk.ColumnPairs)
			{
				Write(str_and + "		@" + column.ForeignKeyColumnName + " IS NULL");
				str_and = " OR" + Environment.NewLine;
			}
			WriteLine("");
		
            
            #line default
            #line hidden
            this.Write("\t)\r\n\t\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName, Seve" +
                    "rity)\r\n\t\tSELECT\r\n\t\t\t\'Не задано значение атрибута - ссылки: ");
            
            #line 386 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetComplexAttributeAlias(fk.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\t\'");
            
            #line 387 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(fk.Name));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\t\'");
            
            #line 388 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetComplexAttributeAlias(fk.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\t2\r\n\t");
            
            #line 390 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		}
	}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\t\r\n\t--region Проверка корректности ссылок\r\n\t");
            
            #line 397 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		foreach (ForeignKeySchema fk in tableSchema.OutgoingForeignKeys)
		{
			bool read_only = false;
			foreach (ForeignKeyColumnPairSchema fk_column in fk.ColumnPairs)
			{
				if (ColumnIsIgnored(fk_column.ForeignKeyColumnName) || ColumnIsReadOnly(fk_column.ForeignKeyColumnName))
				{
					read_only = true;
					break;
				}
			}
			
			if (!read_only && ForeignKeyIsIncludedIntoView2(fk))
			{
		
            
            #line default
            #line hidden
            this.Write("\tIF NOT EXISTS \r\n\t(\r\n\t\tSELECT 0 FROM ");
            
            #line 415 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(fk.ParentTableName));
            
            #line default
            #line hidden
            this.Write(" WHERE\r\n\t\t(\r\n\t\t\t");
            
            #line 417 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

				str_and = "";
				foreach (ForeignKeyColumnPairSchema fk_column in fk.ColumnPairs)
				{
					Write(str_and + fk.ParentTableName + "." + fk_column.PrimaryKeyColumnName + " = @" + fk_column.ForeignKeyColumnName);
					str_and = "AND ";
				}
				WriteLine("");
			
            
            #line default
            #line hidden
            this.Write("\t\t)\r\n\t) AND\r\n\t(\r\n\t\t");
            
            #line 429 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			str_and = "";
			foreach (ForeignKeyColumnPairSchema fk_column in fk.ColumnPairs)
			{
				Write(str_and + "@" + fk_column.ForeignKeyColumnName + " IS NOT NULL");
				str_and = " OR";
			}
			WriteLine("");
		
            
            #line default
            #line hidden
            this.Write("\t)\r\n\tBEGIN\r\n\t\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyNa" +
                    "me, Severity)\r\n\t\tSELECT\r\n\t\t\t\'Некорректная ссылка: ");
            
            #line 442 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetComplexAttributeAlias(fk.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\t\'");
            
            #line 443 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(fk.Name));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\t\'");
            
            #line 444 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetComplexAttributeAlias(fk.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\t2\r\n\tEND\r\n\t");
            
            #line 447 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			}
		}
	
            
            #line default
            #line hidden
            this.Write(@"	--endregion

	--region Проверка уникальности для процедуры создания
	--endregion
	
END TRY
BEGIN CATCH
    SELECT 
        @ErrorMessage = ERROR_MESSAGE(),
        @ErrorSeverity = ERROR_SEVERITY(),
        @ErrorState = ERROR_STATE();

    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState)
	RETURN(-1)
END CATCH
--endregion

IF NOT EXISTS (SELECT 0 FROM @ErrorList WHERE Severity != 1)
BEGIN TRY
	BEGIN TRANSACTION

	--region Обработка порядкового номера
	");
            
            #line 473 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		if (foreignKeyToParentSchema != null && sequenceNumberColumnSchema != null)
		{
	
            
            #line default
            #line hidden
            this.Write("\tDECLARE @DesiredSquenceNumber INT\r\n\tDECLARE @MaxSquenceNumber INT\r\n\t\r\n\tSET @Desi" +
                    "redSquenceNumber = @");
            
            #line 480 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sequenceNumberColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\tSELECT @MaxSquenceNumber = ISNULL(MAX(");
            
            #line 481 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sequenceNumberColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write("), 0) FROM ");
            
            #line 481 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" WHERE\r\n\t(\r\n\t\t");
            
            #line 483 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			str_and = "";
			foreach (ForeignKeyColumnPairSchema fk_column in foreignKeyToParentSchema.ColumnPairs)
			{
				Write(str_and + "		" + tableSchema.Name + "." + fk_column.ForeignKeyColumnName + " = @" + fk_column.ForeignKeyColumnName);
				str_and = "AND ";
			}
			WriteLine("");
		
            
            #line default
            #line hidden
            this.Write("\t)\r\n\t\r\n\tIF @DesiredSquenceNumber IS NULL OR @DesiredSquenceNumber > @MaxSquenceNu" +
                    "mber SET @DesiredSquenceNumber = @MaxSquenceNumber + 1\r\n\tIF @DesiredSquenceNumbe" +
                    "r < 1 SET @DesiredSquenceNumber = 1\r\n\t\r\n\tSET @");
            
            #line 497 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sequenceNumberColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" = @DesiredSquenceNumber\r\n\t\r\n\tUPDATE ");
            
            #line 499 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" SET\r\n\t\t");
            
            #line 500 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sequenceNumberColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 500 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sequenceNumberColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" + 1\r\n\tWHERE\r\n\t(\r\n\t");
            
            #line 503 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		str_and = "";
		foreach (ForeignKeyColumnPairSchema fk_column in foreignKeyToParentSchema.ColumnPairs)
		{
			Write(str_and + "		" + tableSchema.Name + "." + fk_column.ForeignKeyColumnName + " = @" + fk_column.ForeignKeyColumnName);
			str_and = "AND ";
		}
		WriteLine("");
	
            
            #line default
            #line hidden
            this.Write("\t) AND\r\n\t");
            
            #line 513 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sequenceNumberColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" >= @DesiredSquenceNumber\r\n\t");
            
            #line 514 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\r\n\t--region Добавление записи\r\n\t");
            
            #line 520 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		if (dateTimeMarkColumnSchema != null)
			Write("SET @" + dateTimeMarkColumnSchema.Name + " = GETDATE()");
	
            
            #line default
            #line hidden
            this.Write("\t\r\n\tINSERT INTO ");
            
            #line 525 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t(\r\n\t");
            
            #line 527 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		str_and = "	";
		foreach (TableColumnSchema column in tableSchema.Columns)
			if
			(
				(column.IsPrimaryKeyMember && !column.IsIdentity) || //Первичный ключ
				(dateTimeMarkColumnSchema != null && column.Name == dateTimeMarkColumnSchema.Name) || //Метка даты и времени
				(
					viewSchema.Columns.Contains(column.Name) &&
					!ColumnIsIgnored(column.Name) &&
					!ColumnIsReadOnly(column.Name)
				) //Информативные атрибуты
			)
			{
				Write(str_and + "	" + column.Name);
				str_and = "," + Environment.NewLine + "	";
			}			
		if (statusColumnSchema != null)
		{
			Write(str_and + "	" + statusColumnSchema.Name);
			str_and = "," + Environment.NewLine + "	";
		}

		Write(Environment.NewLine);
	
            
            #line default
            #line hidden
            this.Write("\t)\r\n\tVALUES\r\n\t(\r\n\t");
            
            #line 555 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		str_and = "	";
		foreach (TableColumnSchema column in tableSchema.Columns)
			if
			(
				(column.IsPrimaryKeyMember && !column.IsIdentity) || //Первичный ключ
				(dateTimeMarkColumnSchema != null && column.Name == dateTimeMarkColumnSchema.Name) || //Метка даты и времени
				(
					viewSchema.Columns.Contains(column.Name) &&
					!ColumnIsIgnored(column.Name) &&
					!ColumnIsReadOnly(column.Name)
				) //Информативные атрибуты
			)
			{
				Write(str_and + "	@" + column.Name);
				str_and = "," + Environment.NewLine + "	";
			}
		if (statusColumnSchema != null)
		{
			Write(str_and + "	" + InitialStatusValue);
			str_and = "," + Environment.NewLine + "	";
		}

		Write(Environment.NewLine);
	
            
            #line default
            #line hidden
            this.Write("\t)\r\n\t\r\n\t");
            
            #line 582 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		if (TableHasIdentity())
		{
			Write("SET @" + GetIdentityColumnName() + " = SCOPE_IDENTITY()");
		}
	
            
            #line default
            #line hidden
            this.Write("\t\r\n\t--endregion\r\n\t\r\n\t--region Вызов AfterInsert\r\n\t");
            
            #line 592 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

	if (AfterInsert)
	{
	
            
            #line default
            #line hidden
            this.Write("\tBEGIN TRY\r\n\t\tEXEC dbo.");
            
            #line 597 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("AfterInsert")));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t");
            
            #line 598 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			//Первичный ключ
			str_and = "";
			foreach (TableColumnSchema column in tableSchema.PrimaryKey)
			{
				Write(str_and + "		@" + column.Name + " = @" + column.Name);
				str_and = "," + Environment.NewLine;
			}
	
			//Метка даты и времени
			if (dateTimeMarkColumnSchema != null)
			{
				Write(str_and + "		@" + dateTimeMarkColumnSchema.Name + " = @" + dateTimeMarkColumnSchema.Name);
				str_and = "," + Environment.NewLine;
			}
			
			//Информативные параметры
			str_and = "," + Environment.NewLine;
			foreach (TableColumnSchema column in tableSchema.Columns)
				if
				(
					(
						!column.IsPrimaryKeyMember &&
						!(dateTimeMarkColumnSchema != null && column.Name == dateTimeMarkColumnSchema.Name) &&
						viewSchema.Columns.Contains(column.Name) &&
						!ColumnIsIgnored(column.Name) &&
						!ColumnIsReadOnly(column.Name)
					)
				)
				{
					Write(str_and + "		@" + column.Name + " = @" + column.Name);
					str_and = "," + Environment.NewLine;
				}
			Write(Environment.NewLine);
		
            
            #line default
            #line hidden
            this.Write("\tEND TRY\r\n\tBEGIN CATCH\r\n\t\tSELECT \r\n\t\t\t@ErrorMessage = ERROR_MESSAGE(),\r\n\t\t\t@Error" +
                    "Severity = ERROR_SEVERITY(),\r\n\t\t\t@ErrorState = ERROR_STATE();\r\n\t\t\r\n\t\tRAISERROR (" +
                    "@ErrorMessage, @ErrorSeverity, @ErrorState)\r\n\t\tRETURN(-1)\r\n\tEND CATCH\r\n\t");
            
            #line 643 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

	}
	
            
            #line default
            #line hidden
            this.Write(@"	--endregion
	
	COMMIT TRANSACTION
END TRY
BEGIN CATCH
    SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE()

	IF XACT_STATE() <> 0
    BEGIN
        ROLLBACK TRANSACTION;
    END
	
    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
END CATCH

SET @ErrorMessages =
(
	SELECT Message, AttributeName, AttributeFriendlyName, Severity
	FROM @ErrorList AS EL
	ORDER BY EL.Severity DESC, EL.AttributeName
	FOR XML RAW('row'), ROOT ('root')
)

IF EXISTS (SELECT 0 FROM @ErrorList)
	RETURN(1)
ELSE
	RETURN(0)
	
GO

IF @@ERROR != 0
BEGIN
	SET NOEXEC ON
END

GO

--region Делегаты

--region BeforeUpdate
");
            
            #line 686 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

if (BeforeUpdate)
{

            
            #line default
            #line hidden
            this.Write("IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N\'");
            
            #line 690 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("BeforeUpdate")));
            
            #line default
            #line hidden
            this.Write("\') AND OBJECTPROPERTY(id, N\'IsProcedure\') = 1)\r\nEXEC\r\n(\'\r\nCREATE PROCEDURE [dbo]." +
                    "[");
            
            #line 693 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("BeforeUpdate")));
            
            #line default
            #line hidden
            this.Write("]\r\n\t");
            
            #line 694 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		//Первичный ключ
		str_and = "	";
		foreach (TableColumnSchema column in tableSchema.PrimaryKey)
		{
			Write(str_and + GetParameterDeclaration2(column, true));
			str_and = "," + Environment.NewLine;
		}

		//Метка даты и времени
		if (dateTimeMarkColumnSchema != null)
		{
			Write(str_and + "	" + GetParameterDeclaration2(dateTimeMarkColumnSchema, true));
			str_and = "," + Environment.NewLine;
		}
		
		//Информативные параметры
		str_and = "," + Environment.NewLine;
		foreach (TableColumnSchema column in tableSchema.Columns)
			if
			(
				(
					!column.IsPrimaryKeyMember &&
					!(dateTimeMarkColumnSchema != null && column.Name == dateTimeMarkColumnSchema.Name) &&
					viewSchema.Columns.Contains(column.Name) &&
					!ColumnIsIgnored(column.Name) &&
					!ColumnIsReadOnly(column.Name)
				)
			)
			{
				Write(str_and + "	" + GetParameterDeclaration2(column, true));
				str_and = "," + Environment.NewLine;
			}
		Write("," + Environment.NewLine);
	
            
            #line default
            #line hidden
            this.Write(@"	@ErrorMessages XML OUTPUT
AS
BEGIN
--	DECLARE @ErrorList TABLE
--	(
--		Message VARCHAR(2000),
--		AttributeName VARCHAR(128) NULL,
--		AttributeFriendlyName VARCHAR(200) NULL,
--		Severity INT
--	)

--	INSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName, Severity)
--	SELECT
--		''Error Message'',
--		NULL,
--		NULL,
--		2

--SET @ErrorMessages =
--(
--	SELECT Message, AttributeName, AttributeFriendlyName, Severity
--	FROM @ErrorList AS EL
--	ORDER BY EL.Severity DESC, EL.AttributeName
--	FOR XML RAW(''row''), ROOT (''root'')
--)

	RETURN 0
END
')
GO
");
            
            #line 759 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

}

            
            #line default
            #line hidden
            this.Write("--endregion\r\n\r\n--region AfterUpdate\r\n");
            
            #line 765 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

if (AfterUpdate)
{

            
            #line default
            #line hidden
            this.Write("IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N\'");
            
            #line 769 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("AfterUpdate")));
            
            #line default
            #line hidden
            this.Write("\') AND OBJECTPROPERTY(id, N\'IsProcedure\') = 1)\r\nEXEC\r\n(\'\r\nCREATE PROCEDURE [dbo]." +
                    "[");
            
            #line 772 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("AfterUpdate")));
            
            #line default
            #line hidden
            this.Write("]\r\n");
            
            #line 773 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		//Первичный ключ
		str_and = "	";
		foreach (TableColumnSchema column in tableSchema.PrimaryKey)
		{
			Write(str_and + GetParameterDeclaration2(column, false));
			str_and = "," + Environment.NewLine;
		}

		//Метка даты и времени
		if (dateTimeMarkColumnSchema != null)
		{
			Write(str_and + "	" + GetParameterDeclaration2(dateTimeMarkColumnSchema, false));
			str_and = "," + Environment.NewLine;
		}
		
		//Информативные параметры
		str_and = "," + Environment.NewLine;
		foreach (TableColumnSchema column in tableSchema.Columns)
			if
			(
				(
					!column.IsPrimaryKeyMember &&
					!(dateTimeMarkColumnSchema != null && column.Name == dateTimeMarkColumnSchema.Name) &&
					viewSchema.Columns.Contains(column.Name) &&
					!ColumnIsIgnored(column.Name) &&
					!ColumnIsReadOnly(column.Name)
				)
			)
			{
				Write(str_and + "	" + GetParameterDeclaration2(column, false));
				str_and = "," + Environment.NewLine;
			}
		Write(Environment.NewLine);
	
            
            #line default
            #line hidden
            this.Write("AS\r\nBEGIN\r\n\tSET NOCOUNT ON\r\n\tRETURN 0\r\nEND\r\n\')\r\nGO\r\n");
            
            #line 815 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

}

            
            #line default
            #line hidden
            this.Write("--endregion\r\n\r\n--endregion \r\n\r\n");
            
            #line 822 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DatabaseSchema.StoredProcedures.Contains(GetProcedureName("Update")) ? "ALTER" : "CREATE"));
            
            #line default
            #line hidden
            this.Write(" PROCEDURE dbo.");
            
            #line 822 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("Update")));
            
            #line default
            #line hidden
            this.Write("\r\n(\r\n\t--region Объявление параметров\r\n\t");
            
            #line 825 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		//Первичный ключ
		str_and = "	";
		foreach (TableColumnSchema column in tableSchema.PrimaryKey)
		{
			Write(str_and + GetParameterDeclaration2(column, false));
			str_and = "," + Environment.NewLine;
		}

		//Метка даты и времени
		if (dateTimeMarkColumnSchema != null)
		{
			Write(str_and + "	" + GetParameterDeclaration2(dateTimeMarkColumnSchema, false));
			str_and = "," + Environment.NewLine;
		}
		
		//Информативные параметры
		str_and = "," + Environment.NewLine;
		foreach (TableColumnSchema column in tableSchema.Columns)
			if
			(
				(
					!column.IsPrimaryKeyMember &&
					!(dateTimeMarkColumnSchema != null && column.Name == dateTimeMarkColumnSchema.Name) &&
					viewSchema.Columns.Contains(column.Name) &&
					!ColumnIsIgnored(column.Name) &&
					!ColumnIsReadOnly(column.Name)
				)
			)
			{
				Write(str_and + "	" + GetParameterDeclaration2(column, false));
				str_and = "," + Environment.NewLine;
			}
		Write("," + Environment.NewLine);
	
            
            #line default
            #line hidden
            this.Write(@"	@ErrorMessages XML OUTPUT
	--endregion
)
AS
SET NOCOUNT ON

--region Объявление переменных
DECLARE @ObjectID INT
DECLARE @ErrorList TABLE
(
	Message VARCHAR(2000),
	AttributeName VARCHAR(128) NULL,
	AttributeFriendlyName VARCHAR(200) NULL,
	Severity INT
)
DECLARE @ErrorMessage NVARCHAR(4000);
DECLARE @ErrorSeverity INT;
DECLARE @ErrorState INT;
DECLARE @КодОшибки INT
DECLARE @ВременныйСписокОшибок XML
--endregion

--region Вызов BeforeUpdate
");
            
            #line 883 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

if (BeforeUpdate)
{

            
            #line default
            #line hidden
            this.Write("BEGIN TRY\r\n\tEXEC dbo.");
            
            #line 888 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("BeforeUpdate")));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 889 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		//Первичный ключ
		str_and = "";
		foreach (TableColumnSchema column in tableSchema.PrimaryKey)
		{
			Write(str_and + "		@" + column.Name + " = @" + column.Name + " OUTPUT");
			str_and = "," + Environment.NewLine;
		}

		//Метка даты и времени
		if (dateTimeMarkColumnSchema != null)
		{
			Write(str_and + "		@" + dateTimeMarkColumnSchema.Name + " = @" + dateTimeMarkColumnSchema.Name + " OUTPUT");
			str_and = "," + Environment.NewLine;
		}
		
		//Информативные параметры
		str_and = "," + Environment.NewLine;
		foreach (TableColumnSchema column in tableSchema.Columns)
			if
			(
				(
					!column.IsPrimaryKeyMember &&
					!(dateTimeMarkColumnSchema != null && column.Name == dateTimeMarkColumnSchema.Name) &&
					viewSchema.Columns.Contains(column.Name) &&
					!ColumnIsIgnored(column.Name) &&
					!ColumnIsReadOnly(column.Name)
				)
			)
			{
				Write(str_and + "		@" + column.Name + " = @" + column.Name + " OUTPUT");
				str_and = "," + Environment.NewLine;
			}
		Write("," + Environment.NewLine);
	
            
            #line default
            #line hidden
            this.Write(@"		@ErrorMessages = @ErrorMessages OUTPUT
END TRY
BEGIN CATCH
    SELECT 
        @ErrorMessage = ERROR_MESSAGE(),
        @ErrorSeverity = ERROR_SEVERITY(),
        @ErrorState = ERROR_STATE();
	
    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState)
	RETURN(-1)
END CATCH

INSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName, Severity)
SELECT b.value('@Message' , 'varchar(2000)') as Сообщение, 
	b.value('@AttributeName' , 'varchar(128)') as ИмяАтрибута,
	b.value('@AttributeFriendlyName' , 'varchar(200)') as ПсевдонимАтрибута,
	b.value('@Severity' , 'int') as СуровостьОшибки
FROM @ErrorMessages.nodes('/root/row') a(b)

IF (SELECT COUNT(0) FROM @ErrorList WHERE Severity > 1) > 0
BEGIN
	SET @ErrorMessages =
	(
		SELECT Message, AttributeName, AttributeFriendlyName, Severity
		FROM @ErrorList AS EL
		ORDER BY EL.Severity DESC, EL.AttributeName
		FOR XML RAW('row'), ROOT ('root')
	)
	RETURN -1
END
");
            
            #line 954 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

}

            
            #line default
            #line hidden
            this.Write("--endregion\r\n\r\n--region Проверки\r\nBEGIN TRY\r\n\t--region Проверка заполнения параме" +
                    "тров первичного ключа\r\n\t");
            
            #line 962 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		foreach (TableColumnSchema column in tableSchema.PrimaryKey)
			if (!column.IsIdentity) //specific for insert
			{
			
            
            #line default
            #line hidden
            this.Write("\tIF @");
            
            #line 967 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write(" IS NULL\r\n\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName," +
                    " Severity)\r\n\tSELECT\r\n\t\t\'Не задано значение атрибута: ");
            
            #line 970 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetAttributeAlias(column.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\'");
            
            #line 971 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\'");
            
            #line 972 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetAttributeAlias(column.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t2\r\n\t\r\n\t\t\t");
            
            #line 975 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\r\n\t--region Проверка заполнения параметра метки даты и времени\r\n\t");
            
            #line 981 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		if (dateTimeMarkColumnSchema != null)
		{
		
            
            #line default
            #line hidden
            this.Write("\tIF @");
            
            #line 985 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dateTimeMarkColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" IS NULL\r\n\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName," +
                    " Severity)\r\n\tSELECT\r\n\t\t\'Не задано значение атрибута: ");
            
            #line 988 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetAttributeAlias(dateTimeMarkColumnSchema.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\'");
            
            #line 989 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dateTimeMarkColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\'");
            
            #line 990 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetAttributeAlias(dateTimeMarkColumnSchema.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t2\r\n\t\t");
            
            #line 992 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\r\n\t--region Проверка существования объекта\r\n\tIF NOT EXISTS \r\n\t(\r\n\t\t" +
                    "SELECT 0 FROM ");
            
            #line 1000 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" WHERE\r\n\t\t(\t\r\n\t\t\t");
            
            #line 1002 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

				str_and = "";
				foreach (TableColumnSchema column in tableSchema.PrimaryKey)
				{
					Write(str_and + "			" + column.Name + " = @" +column.Name);
					str_and = " AND" + Environment.NewLine;
				}
				WriteLine("");
			
            
            #line default
            #line hidden
            this.Write("\t\t)\r\n\t)\r\n\tBEGIN\r\n\t\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFrien" +
                    "dlyName, Severity)\r\n\t\tSELECT\r\n\t\t\t\'Объект не найден: ");
            
            #line 1016 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("[" + EntityNamespace + "] " + GetEntityName()));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\tNULL,\r\n\t\t\tNULL,\r\n\t\t\t2\r\n\tEND\r\n\t--endregion\r\n\r\n\t--region Проверка заполнения" +
                    " параметров информативных атрибутов\r\n\t");
            
            #line 1024 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		foreach (TableColumnSchema column in tableSchema.Columns)
			if
			(
				!column.IsPrimaryKeyMember &&
				!(dateTimeMarkColumnSchema != null && column.Name == dateTimeMarkColumnSchema.Name) &&
				!column.IsForeignKeyMember &&
				(viewSchema.Columns.Contains(column.Name)) &&
				!ColumnIsIgnored(column.Name) &&
				!ColumnIsReadOnly(column.Name) &&
				!ColumnAllowsDBNull(column.Name)
			)
			{
	
            
            #line default
            #line hidden
            this.Write("\tIF (@");
            
            #line 1038 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write(" IS NULL) --AND ((SELECT IsNullable FROM Metadata_ObjectAttribute WHERE Name = \'");
            
            #line 1038 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("\' AND ObjectID = @ObjectID) != 1)\r\n\t\tINSERT INTO @ErrorList (Message, AttributeNa" +
                    "me, AttributeFriendlyName, Severity)\r\n\t\tSELECT\r\n\t\t\t\'Не задано значение атрибута:" +
                    " ");
            
            #line 1041 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetAttributeAlias(column.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\t\'");
            
            #line 1042 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\t\'");
            
            #line 1043 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetAttributeAlias(column.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\t2\r\n\t");
            
            #line 1045 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\t\r\n\t--region Проверка заполнения параметров составных атрибутов\r\n\t");
            
            #line 1051 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

	foreach	(ForeignKeySchema fk in tableSchema.OutgoingForeignKeys)
	{		bool read_only = false;
		foreach (ForeignKeyColumnPairSchema fk_column in fk.ColumnPairs)
		{
			if (ColumnIsIgnored(fk_column.ForeignKeyColumnName) || ColumnIsReadOnly(fk_column.ForeignKeyColumnName))
			{
				read_only = true;
				break;
			}
		}
		
		bool required = false;
		foreach (ForeignKeyColumnPairSchema column in fk.ColumnPairs)
			if (!fk.ChildTable[column.ForeignKeyColumnName].AllowNull)
			{
				required = true;
				break;
			}
			
		if (!read_only && required && ForeignKeyIsIncludedIntoView2(fk))
		{
			str_and = "";
	
            
            #line default
            #line hidden
            this.Write("\tIF\r\n\t(\r\n\t\t");
            
            #line 1077 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			foreach (ForeignKeyColumnPairSchema column in fk.ColumnPairs)
			{
				Write(str_and + "		@" + column.ForeignKeyColumnName + " IS NULL");
				str_and = " OR" + Environment.NewLine;
			}
			WriteLine("");
		
            
            #line default
            #line hidden
            this.Write("\t)\r\n\t\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName, Seve" +
                    "rity)\r\n\t\tSELECT\r\n\t\t\t\'Не задано значение атрибута - ссылки: ");
            
            #line 1088 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetComplexAttributeAlias(fk.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\t\'");
            
            #line 1089 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(fk.Name));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\t\'");
            
            #line 1090 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetComplexAttributeAlias(fk.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\t2\r\n\t");
            
            #line 1092 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		}
	}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\r\n\t--region Проверка корректности ссылок\r\n\t");
            
            #line 1099 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		foreach (ForeignKeySchema fk in tableSchema.OutgoingForeignKeys)
		{
			bool read_only = false;
			foreach (ForeignKeyColumnPairSchema fk_column in fk.ColumnPairs)
			{
				if (ColumnIsIgnored(fk_column.ForeignKeyColumnName) || ColumnIsReadOnly(fk_column.ForeignKeyColumnName))
				{
					read_only = true;
					break;
				}
			}
			
			if (!read_only && ForeignKeyIsIncludedIntoView2(fk))
			{
		
            
            #line default
            #line hidden
            this.Write("\tIF NOT EXISTS \r\n\t(\r\n\t\tSELECT 0 FROM ");
            
            #line 1117 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(fk.ParentTableName));
            
            #line default
            #line hidden
            this.Write(" WHERE\r\n\t\t(\r\n\t\t\t");
            
            #line 1119 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

				str_and = "";
				foreach (ForeignKeyColumnPairSchema fk_column in fk.ColumnPairs)
				{
					Write(str_and + fk.ParentTableName + "." + fk_column.PrimaryKeyColumnName + " = @" + fk_column.ForeignKeyColumnName);
					str_and = "AND ";
				}
				WriteLine("");
			
            
            #line default
            #line hidden
            this.Write("\t\t)\r\n\t) AND\r\n\t(\r\n\t\t");
            
            #line 1131 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			str_and = "";
			foreach (ForeignKeyColumnPairSchema fk_column in fk.ColumnPairs)
			{
				Write(str_and + "@" + fk_column.ForeignKeyColumnName + " IS NOT NULL");
				str_and = " OR";
			}
			WriteLine("");
		
            
            #line default
            #line hidden
            this.Write("\t)\r\n\tBEGIN\r\n\t\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyNa" +
                    "me, Severity)\r\n\t\tSELECT\r\n\t\t\t\'Некорректная ссылка: ");
            
            #line 1144 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetComplexAttributeAlias(fk.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\t\'");
            
            #line 1145 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(fk.Name));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\t\'");
            
            #line 1146 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetComplexAttributeAlias(fk.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\t2\r\n\tEND\r\n\t");
            
            #line 1149 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			}
		}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\r\n\t--region Проверка оптимистичной блокировки\r\n\t");
            
            #line 1156 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		if (dateTimeMarkColumnSchema != null)
		{
	
            
            #line default
            #line hidden
            this.Write("\tDECLARE @old_");
            
            #line 1160 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dateTimeMarkColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" DATETIME\r\n\t\r\n\tSELECT @old_");
            
            #line 1162 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dateTimeMarkColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 1162 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dateTimeMarkColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\tFROM ");
            
            #line 1163 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" WHERE\r\n\t(\r\n\t\t\t");
            
            #line 1165 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

				str_and = "";
				foreach (TableColumnSchema column in tableSchema.PrimaryKey)
				{
					Write(str_and + "		" + column.Name + " = @" +column.Name);
					str_and = "AND ";
				}
				WriteLine("");
			
            
            #line default
            #line hidden
            this.Write("\t)\r\n\t\r\n\tIF @");
            
            #line 1176 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dateTimeMarkColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" != @old_");
            
            #line 1176 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dateTimeMarkColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\tBEGIN\r\n\t\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName" +
                    ", Severity)\r\n\t\tSELECT\r\n\t\t\t\'Ошибка при изменении записи: параметры объекта были и" +
                    "зменены другим пользователем: ");
            
            #line 1180 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("[" + EntityNamespace + "] " + GetEntityName()));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\tNULL,\r\n\t\t\tNULL,\r\n\t\t\t2\r\n\tEND\t\t\r\n\t");
            
            #line 1185 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		}
	
            
            #line default
            #line hidden
            this.Write(@"	--endregion

	--region Проверка уникальности для процедуры изменения
	--endregion
	
END TRY
BEGIN CATCH
    SELECT 
        @ErrorMessage = ERROR_MESSAGE(),
        @ErrorSeverity = ERROR_SEVERITY(),
        @ErrorState = ERROR_STATE();

    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState)
END CATCH
--endregion

IF NOT EXISTS (SELECT 0 FROM @ErrorList WHERE Severity != 1)
BEGIN TRY
	BEGIN TRANSACTION
	
	--region Обработка порядкового номера
	");
            
            #line 1209 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		if (this.foreignKeyToParentSchema != null && this.sequenceNumberColumnSchema != null)
		{
	
            
            #line default
            #line hidden
            this.Write("\tDECLARE @DesiredSquenceNumber INT\r\n\tDECLARE @OldSquenceNumber INT\r\n\tDECLARE @Max" +
                    "SquenceNumber INT\r\n\t\r\n\tSET @DesiredSquenceNumber = @");
            
            #line 1217 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sequenceNumberColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t\r\n\tSELECT @OldSquenceNumber = ");
            
            #line 1219 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sequenceNumberColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" FROM ");
            
            #line 1219 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\tWHERE\r\n\t(\r\n\t\t");
            
            #line 1222 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			str_and = "";
			foreach (TableColumnSchema column in tableSchema.PrimaryKey) 
			{
				Write(str_and + "		" + column.Name + " = @" + column.Name);
				str_and = "AND ";
			}
			WriteLine("");
		
            
            #line default
            #line hidden
            this.Write("\t)\r\n\t\r\n\tSELECT @MaxSquenceNumber = ISNULL(MAX(");
            
            #line 1233 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sequenceNumberColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write("), 0) FROM ");
            
            #line 1233 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" WHERE\r\n\t(\r\n\t\t");
            
            #line 1235 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			str_and = "";
			foreach (ForeignKeyColumnPairSchema fk_column in foreignKeyToParentSchema.ColumnPairs)
			{
				Write(str_and + "		" + tableSchema.Name + "." + fk_column.ForeignKeyColumnName + " = @" + fk_column.ForeignKeyColumnName);
				str_and = "AND ";
			}
			WriteLine("");
		
            
            #line default
            #line hidden
            this.Write("\t)\r\n\t\r\n\tIF @DesiredSquenceNumber IS NULL OR @DesiredSquenceNumber > @MaxSquenceNu" +
                    "mber SET @DesiredSquenceNumber = @MaxSquenceNumber + 1\r\n\tIF @DesiredSquenceNumbe" +
                    "r < 1 SET @DesiredSquenceNumber = 1\r\n\t\r\n\tSET @");
            
            #line 1249 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sequenceNumberColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" = @DesiredSquenceNumber\r\n\t\r\n\t--коррекция номеров, больших старого порядкового но" +
                    "мера\r\n\tUPDATE ");
            
            #line 1252 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" SET\r\n\t\t");
            
            #line 1253 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sequenceNumberColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 1253 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sequenceNumberColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" - 1\r\n\tWHERE\r\n\t(\r\n\t");
            
            #line 1256 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		str_and = "";
		foreach (ForeignKeyColumnPairSchema fk_column in foreignKeyToParentSchema.ColumnPairs)
		{
			Write(str_and + "		" + tableSchema.Name + "." + fk_column.ForeignKeyColumnName + " = @" + fk_column.ForeignKeyColumnName);
			str_and = "AND ";
		}
		WriteLine("");
	
            
            #line default
            #line hidden
            this.Write("\t) AND\r\n\t");
            
            #line 1266 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sequenceNumberColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" >= @OldSquenceNumber\r\n\t\r\n\t--коррекция номеров больше нового порядкового номера\r\n" +
                    "\tUPDATE ");
            
            #line 1269 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" SET\r\n\t\t");
            
            #line 1270 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sequenceNumberColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 1270 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sequenceNumberColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" + 1\r\n\tWHERE\r\n\t(\r\n\t");
            
            #line 1273 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		str_and = "";
		foreach (ForeignKeyColumnPairSchema fk_column in foreignKeyToParentSchema.ColumnPairs)
		{
			Write(str_and + "		" + tableSchema.Name + "." + fk_column.ForeignKeyColumnName + " = @" + fk_column.ForeignKeyColumnName);
			str_and = "AND ";
		}
		WriteLine("");
	
            
            #line default
            #line hidden
            this.Write("\t) AND\r\n\t");
            
            #line 1283 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sequenceNumberColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" >= @DesiredSquenceNumber\r\n\t");
            
            #line 1284 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\t\r\n\t--region Внесение изменений\r\n\t");
            
            #line 1290 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		if (dateTimeMarkColumnSchema != null)
		{ 
			Write("	SET @" + dateTimeMarkColumnSchema.Name + " = GETDATE()");
		}
		WriteLine("");
	
            
            #line default
            #line hidden
            this.Write("\r\n\tUPDATE ");
            
            #line 1298 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" SET\r\n\t");
            
            #line 1299 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		str_and = "	";
		foreach (TableColumnSchema column in tableSchema.Columns)
			if
			(
				!column.IsPrimaryKeyMember &&
				viewSchema.Columns.Contains(column.Name) &&
				(!ColumnIsIgnored(column.Name)) &&
				(!ColumnIsReadOnly(column.Name))
			)
			{
				Write(str_and + "	" + column.Name + " = @" + column.Name);
				str_and = "," + Environment.NewLine + "	";
			}
		WriteLine("");
	
            
            #line default
            #line hidden
            this.Write("\tWHERE\r\n\t(\r\n\t\t");
            
            #line 1317 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			str_and = "";
			foreach (TableColumnSchema column in tableSchema.PrimaryKey) 
			{
				Write(str_and + "		" + column.Name + " = @" + column.Name);
				str_and = "AND ";
			}
			WriteLine("");
		
            
            #line default
            #line hidden
            this.Write("\t)\r\n\t--endregion\r\n\t\r\n\t--region Вызов AfterUpdate\r\n\t");
            
            #line 1330 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

	if (AfterUpdate)
	{
	
            
            #line default
            #line hidden
            this.Write("\tBEGIN TRY\r\n\t\tEXEC dbo.");
            
            #line 1335 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("AfterUpdate")));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t");
            
            #line 1336 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			//Первичный ключ
			str_and = "";
			foreach (TableColumnSchema column in tableSchema.PrimaryKey)
			{
				Write(str_and + "		@" + column.Name + " = @" + column.Name);
				str_and = "," + Environment.NewLine;
			}
	
			//Метка даты и времени
			if (dateTimeMarkColumnSchema != null)
			{
				Write(str_and + "		@" + dateTimeMarkColumnSchema.Name + " = @" + dateTimeMarkColumnSchema.Name);
				str_and = "," + Environment.NewLine;
			}
			
			//Информативные параметры
			str_and = "," + Environment.NewLine;
			foreach (TableColumnSchema column in tableSchema.Columns)
				if
				(
					(
						!column.IsPrimaryKeyMember &&
						!(dateTimeMarkColumnSchema != null && column.Name == dateTimeMarkColumnSchema.Name) &&
						viewSchema.Columns.Contains(column.Name) &&
						!ColumnIsIgnored(column.Name) &&
						!ColumnIsReadOnly(column.Name)
					)
				)
				{
					Write(str_and + "		@" + column.Name + " = @" + column.Name);
					str_and = "," + Environment.NewLine;
				}
			Write(Environment.NewLine);
		
            
            #line default
            #line hidden
            this.Write("\tEND TRY\r\n\tBEGIN CATCH\r\n\t\tSELECT \r\n\t\t\t@ErrorMessage = ERROR_MESSAGE(),\r\n\t\t\t@Error" +
                    "Severity = ERROR_SEVERITY(),\r\n\t\t\t@ErrorState = ERROR_STATE();\r\n\t\t\r\n\t\tRAISERROR (" +
                    "@ErrorMessage, @ErrorSeverity, @ErrorState)\r\n\t\tRETURN(-1)\r\n\tEND CATCH\r\n\t");
            
            #line 1381 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

	}
	
            
            #line default
            #line hidden
            this.Write(@"	--endregion
	
	COMMIT TRANSACTION
END TRY
BEGIN CATCH
    SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE()

	IF XACT_STATE() != 0
    BEGIN
        ROLLBACK TRANSACTION;
    END
	
    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
END CATCH

SET @ErrorMessages =
(
	SELECT Message, AttributeName, AttributeFriendlyName, Severity
	FROM @ErrorList as EL
	ORDER BY EL.Severity DESC, EL.AttributeName
	FOR XML RAW('row'), ROOT ('root')
)

IF EXISTS (SELECT 0 FROM @ErrorList)
	RETURN(1)
ELSE
	RETURN(0)
GO	

IF @@ERROR != 0
BEGIN
	SET NOEXEC ON
END

GO

--region Делегаты

--region BeforeDelete
");
            
            #line 1423 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

if (BeforeDelete)
{

            
            #line default
            #line hidden
            this.Write("IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N\'");
            
            #line 1427 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("BeforeDelete")));
            
            #line default
            #line hidden
            this.Write("\') AND OBJECTPROPERTY(id, N\'IsProcedure\') = 1)\r\nEXEC\r\n(\'\r\nCREATE PROCEDURE [dbo]." +
                    "[");
            
            #line 1430 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("BeforeDelete")));
            
            #line default
            #line hidden
            this.Write("]\r\n\t");
            
            #line 1431 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		//Первичный ключ
		str_and = "";
		foreach (TableColumnSchema column in tableSchema.PrimaryKey)
		{
			Write(str_and + "	" + GetParameterDeclaration2(column, true));
			str_and = "," + Environment.NewLine;
		}

		//Метка даты и времени
		if (dateTimeMarkColumnSchema != null)
		{
			Write(str_and + "	" + GetParameterDeclaration2(dateTimeMarkColumnSchema, true));
			str_and = "," + Environment.NewLine;
		}
		Write("," + Environment.NewLine);
	
            
            #line default
            #line hidden
            this.Write("\t@ErrorMessages XML OUTPUT\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON\r\n\tRETURN 0\r\nEND\r\n\')\r\nGO\r\n");
            
            #line 1456 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

}

            
            #line default
            #line hidden
            this.Write("--endregion\r\n\r\n--region AfterDelete\r\n");
            
            #line 1462 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

if (AfterDelete)
{

            
            #line default
            #line hidden
            this.Write("IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N\'");
            
            #line 1466 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("AfterDelete")));
            
            #line default
            #line hidden
            this.Write("\') AND OBJECTPROPERTY(id, N\'IsProcedure\') = 1)\r\nEXEC\r\n(\'\r\nCREATE PROCEDURE [dbo]." +
                    "[");
            
            #line 1469 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("AfterDelete")));
            
            #line default
            #line hidden
            this.Write("]\r\n\t");
            
            #line 1470 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		//Первичный ключ
		str_and = "";
		foreach (TableColumnSchema column in tableSchema.PrimaryKey)
		{
			Write(str_and + "	" + GetParameterDeclaration2(column, false));
			str_and = "," + Environment.NewLine;
		}

		//Метка даты и времени
		if (dateTimeMarkColumnSchema != null)
		{
			Write(str_and + "	" + GetParameterDeclaration2(dateTimeMarkColumnSchema, false));
			str_and = "," + Environment.NewLine;
		}
		Write(Environment.NewLine);
	
            
            #line default
            #line hidden
            this.Write("AS\r\nBEGIN\r\n\tSET NOCOUNT ON\r\n\tRETURN 0\r\nEND\r\n\')\r\nGO\r\n");
            
            #line 1494 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

}

            
            #line default
            #line hidden
            this.Write("--endregion\r\n\r\n--endregion \r\n\r\n");
            
            #line 1501 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DatabaseSchema.StoredProcedures.Contains(GetProcedureName("Delete")) ? "ALTER" : "CREATE"));
            
            #line default
            #line hidden
            this.Write(" PROCEDURE dbo.");
            
            #line 1501 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("Delete")));
            
            #line default
            #line hidden
            this.Write("\r\n(\r\n\t--region Объявление параметров\r\n\t");
            
            #line 1504 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		//Первичный ключ
		str_and = "";
		foreach (TableColumnSchema column in tableSchema.PrimaryKey)
		{
			Write(str_and + "	" + GetParameterDeclaration2(column, false));
			str_and = "," + Environment.NewLine;
		}

		//Метка даты и времени
		if (dateTimeMarkColumnSchema != null)
		{
			Write(str_and + "	" + GetParameterDeclaration2(dateTimeMarkColumnSchema, false));
			str_and = "," + Environment.NewLine;
		}
		Write("," + Environment.NewLine);
	
            
            #line default
            #line hidden
            this.Write(@"	@ErrorMessages XML OUTPUT
	--endregion
)
AS
SET NOCOUNT ON

--region Объявление переменных
DECLARE @ObjectID INT
DECLARE @ErrorList TABLE
(
	Message VARCHAR(2000),
	AttributeName VARCHAR(128) NULL,
	AttributeFriendlyName VARCHAR(200) NULL,
	Severity INT
)
DECLARE @ErrorMessage NVARCHAR(4000);
DECLARE @ErrorSeverity INT;
DECLARE @ErrorState INT;
DECLARE @КодОшибки INT
DECLARE @ВременныйСписокОшибок XML
--endregion

--region Вызов BeforeDelete
");
            
            #line 1544 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

if (BeforeDelete)
{

            
            #line default
            #line hidden
            this.Write("BEGIN TRY\r\n\tEXEC dbo.");
            
            #line 1549 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("BeforeDelete")));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 1550 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		//Первичный ключ
		str_and = "";
		foreach (TableColumnSchema column in tableSchema.PrimaryKey)
		{
			Write(str_and + "		@" + column.Name + " = @" + column.Name + " OUTPUT");
			str_and = "," + Environment.NewLine;
		}

		//Метка даты и времени
		if (dateTimeMarkColumnSchema != null)
		{
			Write(str_and + "		@" + dateTimeMarkColumnSchema.Name + " = @" + dateTimeMarkColumnSchema.Name + " OUTPUT");
			str_and = "," + Environment.NewLine;
		}
		Write("," + Environment.NewLine);
	
            
            #line default
            #line hidden
            this.Write(@"		@ErrorMessages = @ErrorMessages OUTPUT
END TRY
BEGIN CATCH
    SELECT 
        @ErrorMessage = ERROR_MESSAGE(),
        @ErrorSeverity = ERROR_SEVERITY(),
        @ErrorState = ERROR_STATE();
	
    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState)
	RETURN(-1)
END CATCH

INSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName, Severity)
SELECT b.value('@Message' , 'varchar(2000)') as Сообщение, 
	b.value('@AttributeName' , 'varchar(128)') as ИмяАтрибута,
	b.value('@AttributeFriendlyName' , 'varchar(200)') as ПсевдонимАтрибута,
	b.value('@Severity' , 'int') as СуровостьОшибки
FROM @ErrorMessages.nodes('/root/row') a(b)

IF (SELECT COUNT(0) FROM @ErrorList WHERE Severity > 1) > 0
BEGIN
	SET @ErrorMessages =
	(
		SELECT Message, AttributeName, AttributeFriendlyName, Severity
		FROM @ErrorList AS EL
		ORDER BY EL.Severity DESC, EL.AttributeName
		FOR XML RAW('row'), ROOT ('root')
	)
	RETURN -1
END
");
            
            #line 1597 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

}

            
            #line default
            #line hidden
            this.Write("--endregion\r\n\r\n--region Проверки\r\nBEGIN TRY\r\n\t--region Проверка заполнения параме" +
                    "тров первичного ключа\r\n\t");
            
            #line 1605 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		foreach (TableColumnSchema column in tableSchema.PrimaryKey)
			if (!column.IsIdentity) //specific for insert
			{
			
            
            #line default
            #line hidden
            this.Write("\tIF @");
            
            #line 1610 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write(" IS NULL\r\n\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName," +
                    " Severity)\r\n\tSELECT\r\n\t\t\'Не задано значение атрибута: ");
            
            #line 1613 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetAttributeAlias(column.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\'");
            
            #line 1614 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\'");
            
            #line 1615 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetAttributeAlias(column.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t2\r\n\t\r\n\t\t\t");
            
            #line 1618 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\r\n\t--region Проверка заполнения параметра метки даты и времени\r\n\t");
            
            #line 1624 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		if (dateTimeMarkColumnSchema != null)
		{
		
            
            #line default
            #line hidden
            this.Write("\tIF @");
            
            #line 1628 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dateTimeMarkColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" IS NULL\r\n\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName," +
                    " Severity)\r\n\tSELECT\r\n\t\t\'Не задано значение атрибута: ");
            
            #line 1631 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetAttributeAlias(dateTimeMarkColumnSchema.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\'");
            
            #line 1632 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dateTimeMarkColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\'");
            
            #line 1633 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetAttributeAlias(dateTimeMarkColumnSchema.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t2\r\n\t\t");
            
            #line 1635 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\r\n\t--region Проверка существования объекта\r\n\tIF NOT EXISTS \r\n\t(\r\n\t\t" +
                    "SELECT 0 FROM ");
            
            #line 1643 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" WHERE\r\n\t\t(\t\r\n\t\t\t");
            
            #line 1645 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

				str_and = "";
				foreach (TableColumnSchema column in tableSchema.PrimaryKey)
				{
					Write(str_and + "			" + column.Name + " = @" +column.Name);
					str_and = " AND" +  Environment.NewLine;
				}
				WriteLine("");
			
            
            #line default
            #line hidden
            this.Write("\t\t)\r\n\t)\r\n\tBEGIN\r\n\t\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFrien" +
                    "dlyName, Severity)\r\n\t\tSELECT\r\n\t\t\t\'Объект не найден: ");
            
            #line 1659 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("[" + EntityNamespace + "] " + GetEntityName()));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\tNULL,\r\n\t\t\tNULL,\r\n\t\t\t2\r\n\tEND\r\n\t--endregion\r\n\r\n\t--region Проверка оптимистич" +
                    "ной блокировки\r\n\t");
            
            #line 1667 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		if (dateTimeMarkColumnSchema != null)
		{
	
            
            #line default
            #line hidden
            this.Write("\tDECLARE @old_");
            
            #line 1671 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dateTimeMarkColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" DATETIME\r\n\t\r\n\tSELECT @old_");
            
            #line 1673 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dateTimeMarkColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 1673 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dateTimeMarkColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\tFROM ");
            
            #line 1674 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" WHERE\r\n\t(\r\n\t\t\t");
            
            #line 1676 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

				str_and = "";
				foreach (TableColumnSchema column in tableSchema.PrimaryKey)
				{
					Write(str_and + "		" + column.Name + " = @" +column.Name);
					str_and = "AND ";
				}
				WriteLine("");
			
            
            #line default
            #line hidden
            this.Write("\t)\r\n\t\r\n\tIF @");
            
            #line 1687 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dateTimeMarkColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" != @old_");
            
            #line 1687 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dateTimeMarkColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\tBEGIN\r\n\t\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName" +
                    ", Severity)\r\n\t\tSELECT\r\n\t\t\t\'Ошибка при изменении записи: параметры объекта были и" +
                    "зменены другим пользователем: ");
            
            #line 1691 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("[" + EntityNamespace + "] " + GetEntityName()));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\tNULL,\r\n\t\t\tNULL,\r\n\t\t\t2\r\n\tEND\t\t\r\n\t");
            
            #line 1696 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\t\r\n\t--region Проверка ссылок при физическом удалении\r\n\t");
            
            #line 1702 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		if (this.deleteFlagColumnSchema == null)
		{
			foreach (ForeignKeySchema key in tableSchema.IncomingForeignKeys)
			{
	
            
            #line default
            #line hidden
            this.Write("\tIF EXISTS \r\n\t(\r\n\t\tSELECT 0 FROM ");
            
            #line 1710 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(key.ChildTableName));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\tINNER JOIN ");
            
            #line 1711 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(key.ParentTableName));
            
            #line default
            #line hidden
            this.Write(" ON\r\n\t\t");
            
            #line 1712 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			str_and = "";
			foreach (ForeignKeyColumnPairSchema column in key.ColumnPairs)
			{
				Write(str_and + "				" + key.ChildTableName + "." + column.ForeignKeyColumnName + " = " + key.ParentTableName + "." + column.PrimaryKeyColumnName);
				str_and = "AND ";
			}
			WriteLine("");
		
            
            #line default
            #line hidden
            this.Write("\t\tWHERE\r\n\t\t(\r\n\t\t\t");
            
            #line 1723 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

				str_and = "";
				foreach (TableColumnSchema column in tableSchema.PrimaryKey)
				{
					Write(str_and + "			" + key.ParentTableName + "." + column.Name + " = @" + column.Name);
					str_and = "AND ";
				}
				WriteLine("");
			
            
            #line default
            #line hidden
            this.Write("\t\t)\r\n\t)\r\n\tBEGIN\r\n\t\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFrien" +
                    "dlyName, Severity)\r\n\t\tSELECT\r\n\t\t\t\'Ошибка удаления: нельзя удалить объект, поскол" +
                    "ьку существуют другие объекты, ссылающиеся на него (таблица ");
            
            #line 1737 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(key.ParentTableName));
            
            #line default
            #line hidden
            this.Write(").\',\r\n\t\t\tNULL,\r\n\t\t\tNULL,\r\n\t\t\t2\r\n\tEND\r\n\t\r\n\t");
            
            #line 1743 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			}
		}
	
            
            #line default
            #line hidden
            this.Write(@"	--endregion

END TRY
BEGIN CATCH
    SELECT 
        @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE()

    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState)
	RETURN(-1)
END CATCH
--endregion

IF NOT EXISTS (SELECT 0 FROM @ErrorList WHERE Severity != 1)
BEGIN TRY
	BEGIN TRANSACTION

	--region Обработка порядкового номера
	");
            
            #line 1764 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		if (this.foreignKeyToParentSchema != null && this.sequenceNumberColumnSchema != null)
		{
	
            
            #line default
            #line hidden
            this.Write("\tDECLARE @OldSquenceNumber INT\r\n\t\r\n\tSELECT @OldSquenceNumber = ");
            
            #line 1770 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sequenceNumberColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" FROM ");
            
            #line 1770 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\tWHERE\r\n\t(\r\n\t\t");
            
            #line 1773 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			str_and = "";
			foreach (TableColumnSchema column in tableSchema.PrimaryKey) 
			{
				Write(str_and + "		" + column.Name + " = @" + column.Name);
				str_and = "AND ";
			}
			WriteLine("");
		
            
            #line default
            #line hidden
            this.Write("\t)\r\n\t\r\n\t--коррекция номеров, больших старого порядкового номера\r\n\tUPDATE ");
            
            #line 1785 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" SET\r\n\t\t");
            
            #line 1786 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 1786 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sequenceNumberColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 1786 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 1786 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sequenceNumberColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" - 1\r\n\tFROM ");
            
            #line 1787 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t\tINNER JOIN ");
            
            #line 1788 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" AS SiblingTable\r\n\tON\r\n\t(\r\n\t");
            
            #line 1791 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		str_and = "";
		foreach (ForeignKeyColumnPairSchema fk_column in foreignKeyToParentSchema.ColumnPairs)
		{
			Write(str_and + "		" + tableSchema.Name + "." + fk_column.ForeignKeyColumnName + " = SiblingTable." + fk_column.ForeignKeyColumnName);
			str_and = "AND ";
		}
		WriteLine("");
	
            
            #line default
            #line hidden
            this.Write("\t)\r\n\tWHERE\r\n\t(\t\r\n\t\t");
            
            #line 1803 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			str_and = "";
			foreach (TableColumnSchema column in tableSchema.PrimaryKey)
			{
		
            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 1808 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(str_and + "SiblingTable." + column.Name));
            
            #line default
            #line hidden
            this.Write(" = @");
            
            #line 1808 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t");
            
            #line 1809 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

				str_and = "AND ";
			}
		
            
            #line default
            #line hidden
            this.Write("\t) AND\r\n\t");
            
            #line 1814 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 1814 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sequenceNumberColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" >= @OldSquenceNumber\r\n\t\r\n\t");
            
            #line 1816 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

	}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\r\n\t--region Физическое или логическое удаление объекта\r\n\t");
            
            #line 1822 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		if (this.deleteFlagColumnSchema != null)
		{
	
            
            #line default
            #line hidden
            this.Write("\tUPDATE ");
            
            #line 1826 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" SET ");
            
            #line 1826 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(deleteFlagColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" = 1\r\n\tWHERE\r\n\t(\t\r\n\t\t");
            
            #line 1829 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
str_and = "";
		foreach (TableColumnSchema column in tableSchema.PrimaryKey) {
            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 1831 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(str_and + column.Name));
            
            #line default
            #line hidden
            this.Write(" = @");
            
            #line 1831 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t");
            
            #line 1832 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
str_and = "AND ";}
            
            #line default
            #line hidden
            this.Write("\t)\t\r\n\t");
            
            #line 1834 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			}
		else
		{
			
	
            
            #line default
            #line hidden
            this.Write("\t\t\r\n\tDELETE FROM ");
            
            #line 1840 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" WHERE\r\n\t(\t\r\n\t\t");
            
            #line 1842 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
str_and = "";
		foreach (TableColumnSchema column in tableSchema.PrimaryKey) {
            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 1844 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(str_and + column.Name));
            
            #line default
            #line hidden
            this.Write(" = @");
            
            #line 1844 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t");
            
            #line 1845 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
str_and = "AND ";}
            
            #line default
            #line hidden
            this.Write("\t)\r\n\t");
            
            #line 1847 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\t\r\n\t--region Вызов AfterDelete\r\n\t");
            
            #line 1853 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

	if (AfterDelete)
	{
	
            
            #line default
            #line hidden
            this.Write("\tBEGIN TRY\r\n\t\tEXEC dbo.");
            
            #line 1858 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("AfterDelete")));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t");
            
            #line 1859 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			//Первичный ключ
			str_and = "";
			foreach (TableColumnSchema column in tableSchema.PrimaryKey)
			{
				Write(str_and + "		@" + column.Name + " = @" + column.Name);
				str_and = "," + Environment.NewLine;
			}
	
			//Метка даты и времени
			if (dateTimeMarkColumnSchema != null)
			{
				Write(str_and + "		@" + dateTimeMarkColumnSchema.Name + " = @" + dateTimeMarkColumnSchema.Name);
				str_and = "," + Environment.NewLine;
			}
			Write(Environment.NewLine);
		
            
            #line default
            #line hidden
            this.Write("\tEND TRY\r\n\tBEGIN CATCH\r\n\t\tSELECT \r\n\t\t\t@ErrorMessage = ERROR_MESSAGE(),\r\n\t\t\t@Error" +
                    "Severity = ERROR_SEVERITY(),\r\n\t\t\t@ErrorState = ERROR_STATE();\r\n\t\t\r\n\t\tRAISERROR (" +
                    "@ErrorMessage, @ErrorSeverity, @ErrorState)\r\n\t\tRETURN(-1)\r\n\tEND CATCH\r\n\t");
            
            #line 1886 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

	}
	
            
            #line default
            #line hidden
            this.Write(@"	--endregion
	
	COMMIT TRANSACTION
END TRY
BEGIN CATCH
    SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE()

	IF XACT_STATE() <> 0
    BEGIN
        ROLLBACK TRANSACTION
    END
	
    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
END CATCH

SET @ErrorMessages =
(
	SELECT Message, AttributeName, AttributeFriendlyName, Severity
	FROM @ErrorList as EL
	ORDER BY EL.Severity DESC, EL.AttributeName
	FOR XML RAW('row'), ROOT ('root')
)

IF EXISTS (SELECT 0 FROM @ErrorList)
	RETURN(1)
ELSE
	RETURN(0)
GO

IF @@ERROR != 0
BEGIN
	SET NOEXEC ON
END

GO

");
            
            #line 1925 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DatabaseSchema.StoredProcedures.Contains(GetProcedureName("Load")) ? "ALTER" : "CREATE"));
            
            #line default
            #line hidden
            this.Write(" PROCEDURE dbo.");
            
            #line 1925 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("Load")));
            
            #line default
            #line hidden
            this.Write("\r\n(\r\n\t--region Объявление параметров\r\n\t");
            
            #line 1928 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		//Первичный ключ
		str_and = "	";
		foreach (TableColumnSchema column in tableSchema.PrimaryKey)
		{
			Write(str_and + GetParameterDeclaration2(column, false));
			str_and = "," + Environment.NewLine;
		}

		//Метка даты и времени
		if (dateTimeMarkColumnSchema != null)
		{
			Write(str_and + "	" + GetParameterDeclaration2(dateTimeMarkColumnSchema, true));
			str_and = "," + Environment.NewLine;
		}
		
		//Информативные параметры
		str_and = "," + Environment.NewLine;
		foreach (ViewColumnSchema column in viewSchema.Columns)
			if
			(
				(
					!tableSchema.PrimaryKey.Contains(column.Name) &&
					!(this.dateTimeMarkColumnSchema != null && column.Name == dateTimeMarkColumnSchema.Name) &&
					!ColumnIsIgnored(column.Name)
				)
			)
			{
				Write(str_and + "	" + GetParameterDeclaration(column, true));
				str_and = "," + Environment.NewLine;
			}
		Write("," + Environment.NewLine);
	
            
            #line default
            #line hidden
            this.Write(@"	@ErrorMessages XML OUTPUT
	--endregion
)
AS
SET NOCOUNT ON

--region Объявление переменных
DECLARE @ObjectID INT
DECLARE @ErrorList TABLE
(
	Message VARCHAR(2000),
	AttributeName VARCHAR(128) NULL,
	AttributeFriendlyName VARCHAR(200) NULL,
	Severity INT
)
DECLARE @ErrorMessage NVARCHAR(4000);
DECLARE @ErrorSeverity INT;
DECLARE @ErrorState INT;
DECLARE @КодОшибки INT
DECLARE @ВременныйСписокОшибок XML
--endregion

--region Проверки
BEGIN TRY
	--region Проверка заполнения параметров первичного ключа
	");
            
            #line 1986 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		foreach (TableColumnSchema column in tableSchema.PrimaryKey)
			if (!column.IsIdentity) //specific for insert
			{
			
            
            #line default
            #line hidden
            this.Write("\tIF @");
            
            #line 1991 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write(" IS NULL\r\n\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName," +
                    " Severity)\r\n\tSELECT\r\n\t\t\'Не задано значение атрибута: ");
            
            #line 1994 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetAttributeAlias(column.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\'");
            
            #line 1995 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\'");
            
            #line 1996 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetAttributeAlias(column.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t2\r\n\t\r\n\t\t\t");
            
            #line 1999 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\r\n\t--region Проверка существования объекта\r\n\tIF NOT EXISTS \r\n\t(\r\n\t\t" +
                    "SELECT 0 FROM ");
            
            #line 2007 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" WHERE\r\n\t\t(\t\r\n\t\t\t");
            
            #line 2009 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

				str_and = "";
				foreach (TableColumnSchema column in tableSchema.PrimaryKey)
				{
					Write(str_and + "			" + column.Name + " = @" +column.Name);
					str_and = " AND" + Environment.NewLine;
				}
				WriteLine("");
			
            
            #line default
            #line hidden
            this.Write("\t\t)\r\n\t)\r\n\tBEGIN\r\n\t\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFrien" +
                    "dlyName, Severity)\r\n\t\tSELECT\r\n\t\t\t\'Объект не найден: ");
            
            #line 2023 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("[" + EntityNamespace + "] " + GetEntityName()));
            
            #line default
            #line hidden
            this.Write(@"',
			NULL,
			NULL,
			2
	END
	--endregion

END TRY
BEGIN CATCH
    SELECT 
        @ErrorMessage = ERROR_MESSAGE(),
        @ErrorSeverity = ERROR_SEVERITY(),
        @ErrorState = ERROR_STATE();

    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState)
	RETURN(-1)
END CATCH
--endregion

IF NOT EXISTS (SELECT 0 FROM @ErrorList WHERE Severity != 1)
BEGIN TRY

	--region Загрузка объекта
	SELECT 
	");
            
            #line 2047 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		str_and = "	";
		foreach (ViewColumnSchema column in viewSchema.Columns)
		if (!tableSchema.PrimaryKey.Contains(column.Name)) 
		{
			Write(str_and + "	@" + column.Name + " = " + column.Name); 
            
            #line default
            #line hidden
            
            #line 2052 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			str_and = "," + Environment.NewLine + "	";
		}
	
            
            #line default
            #line hidden
            this.Write("\tFROM ");
            
            #line 2056 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(viewSchema.Name));
            
            #line default
            #line hidden
            this.Write(" WHERE\r\n\t(\t\r\n\t\t");
            
            #line 2058 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			str_and = "";
			foreach (TableColumnSchema column in tableSchema.PrimaryKey)
			{
				Write(str_and + "		" + column.Name + " = @" + column.Name);
				str_and = " AND" + Environment.NewLine;
			}
			Write(Environment.NewLine);
		
            
            #line default
            #line hidden
            this.Write(@"	)
	--endregion
	
END TRY
BEGIN CATCH
    SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE()
    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
END CATCH

SET @ErrorMessages =
(
	SELECT Message, AttributeName, AttributeFriendlyName, Severity
	FROM @ErrorList as EL
	ORDER BY EL.Severity DESC, EL.AttributeName
	FOR XML RAW('row'), ROOT ('root')
)

IF EXISTS (SELECT 0 FROM @ErrorList)
	RETURN(1)
ELSE
	RETURN(0)

GO

IF @@ERROR != 0
BEGIN
	SET NOEXEC ON
END

GO

--region Делегаты

--region BeforeRestore
");
            
            #line 2101 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

if (BeforeRestore)
{

            
            #line default
            #line hidden
            this.Write("IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N\'");
            
            #line 2105 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("BeforeRestore")));
            
            #line default
            #line hidden
            this.Write("\') AND OBJECTPROPERTY(id, N\'IsProcedure\') = 1)\r\nEXEC\r\n(\'\r\nCREATE PROCEDURE [dbo]." +
                    "[");
            
            #line 2108 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("BeforeRestore")));
            
            #line default
            #line hidden
            this.Write("]\r\n");
            
            #line 2109 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

	str_and = "";
	foreach (TableColumnSchema column in tableSchema.PrimaryKey)
	{
		Write(str_and + "	" + GetParameterDeclaration2(column, true));
		str_and = "," + Environment.NewLine;
	}
	Write("," + Environment.NewLine);

            
            #line default
            #line hidden
            this.Write("\t@СписокОшибок VARCHAR(MAX) OUTPUT\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON\r\n\tRETURN 0\r\nEND\r\n\'" +
                    ")\r\nGO\r\n");
            
            #line 2126 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

}

            
            #line default
            #line hidden
            this.Write("--endregion\r\n\r\n--region AfterRestore\r\n");
            
            #line 2132 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

if (AfterRestore)
{

            
            #line default
            #line hidden
            this.Write("IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N\'");
            
            #line 2136 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("AfterRestore")));
            
            #line default
            #line hidden
            this.Write("\') AND OBJECTPROPERTY(id, N\'IsProcedure\') = 1)\r\nEXEC\r\n(\'\r\nCREATE PROCEDURE [dbo]." +
                    "[");
            
            #line 2139 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("AfterRestore")));
            
            #line default
            #line hidden
            this.Write("]\r\n");
            
            #line 2140 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

	str_and = "";
	foreach (TableColumnSchema column in tableSchema.PrimaryKey)
	{
		Write(str_and + "	" + GetParameterDeclaration2(column, false));
		str_and = "," + Environment.NewLine;
	}
	Write(Environment.NewLine);

            
            #line default
            #line hidden
            this.Write("AS\r\nBEGIN\r\n\tSET NOCOUNT ON\r\n\tRETURN 0\r\nEND\r\n\')\r\nGO\r\n");
            
            #line 2156 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

}

            
            #line default
            #line hidden
            this.Write("--endregion\r\n\r\n--endregion\r\n\r\n");
            
            #line 2163 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

if (Restore)
{

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 2168 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DatabaseSchema.StoredProcedures.Contains(GetProcedureName("Restore")) ? "ALTER" : "CREATE"));
            
            #line default
            #line hidden
            this.Write(" PROCEDURE dbo.");
            
            #line 2168 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("Restore")));
            
            #line default
            #line hidden
            this.Write("\r\n(\r\n\t--region Объявление параметров\r\n\t");
            
            #line 2171 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		//Первичный ключ
		str_and = "";
		foreach (TableColumnSchema column in tableSchema.PrimaryKey)
		{
			Write(str_and + "	" + GetParameterDeclaration2(column, false));
			str_and = "," + Environment.NewLine;
		}

		//Метка даты и времени
		if (dateTimeMarkColumnSchema != null)
		{
			Write(str_and + "	" + GetParameterDeclaration2(dateTimeMarkColumnSchema, false));
			str_and = "," + Environment.NewLine;
		}
		Write("," + Environment.NewLine);
	
            
            #line default
            #line hidden
            this.Write(@"	@ErrorMessages XML OUTPUT
	--endregion
)
AS
SET NOCOUNT ON

--region Объявление переменных
DECLARE @ObjectID INT
DECLARE @ErrorList TABLE
(
	Message VARCHAR(2000),
	AttributeName VARCHAR(128) NULL,
	AttributeFriendlyName VARCHAR(200) NULL,
	Severity INT
)
DECLARE @ErrorMessage NVARCHAR(4000);
DECLARE @ErrorSeverity INT;
DECLARE @ErrorState INT;
DECLARE @КодОшибки INT
DECLARE @ВременныйСписокОшибок XML
--endregion

--region Проверки
BEGIN TRY
	--region Проверка заполнения параметров первичного ключа
	");
            
            #line 2213 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		foreach (TableColumnSchema column in tableSchema.PrimaryKey)
			if (!column.IsIdentity) //specific for insert
			{
			
            
            #line default
            #line hidden
            this.Write("\tIF @");
            
            #line 2218 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write(" IS NULL\r\n\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName," +
                    " Severity)\r\n\tSELECT\r\n\t\t\'Не задано значение атрибута: ");
            
            #line 2221 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetAttributeAlias(column.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\'");
            
            #line 2222 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\'");
            
            #line 2223 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetAttributeAlias(column.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t2\r\n\t\r\n\t\t\t");
            
            #line 2226 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\r\n\t--region Проверка заполнения параметра метки даты и времени\r\n\t");
            
            #line 2232 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		if (dateTimeMarkColumnSchema != null)
		{
		
            
            #line default
            #line hidden
            this.Write("\tIF @");
            
            #line 2236 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dateTimeMarkColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" IS NULL\r\n\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName," +
                    " Severity)\r\n\tSELECT\r\n\t\t\'Не задано значение атрибута: ");
            
            #line 2239 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetAttributeAlias(dateTimeMarkColumnSchema.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\'");
            
            #line 2240 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dateTimeMarkColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\'");
            
            #line 2241 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetAttributeAlias(dateTimeMarkColumnSchema.Name)));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t2\r\n\t\t");
            
            #line 2243 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\r\n\t--region Проверка существования объекта\r\n\tIF NOT EXISTS \r\n\t(\r\n\t\t" +
                    "SELECT 0 FROM ");
            
            #line 2251 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" WHERE\r\n\t\t(\t\r\n\t\t\t");
            
            #line 2253 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

				str_and = "";
				foreach (TableColumnSchema column in tableSchema.PrimaryKey)
				{
					Write(str_and + "			" + column.Name + " = @" +column.Name);
					str_and = " AND" +  Environment.NewLine;
				}
				WriteLine("");
			
            
            #line default
            #line hidden
            this.Write("\t\t)\r\n\t)\r\n\tBEGIN\r\n\t\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFrien" +
                    "dlyName, Severity)\r\n\t\tSELECT\r\n\t\t\t\'Объект не найден: ");
            
            #line 2267 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("[" + EntityNamespace + "] " + GetEntityName()));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\tNULL,\r\n\t\t\tNULL,\r\n\t\t\t2\r\n\tEND\r\n\t--endregion\r\n\r\n\t--region Проверка оптимистич" +
                    "ной блокировки\r\n\t");
            
            #line 2275 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		if (dateTimeMarkColumnSchema != null)
		{
	
            
            #line default
            #line hidden
            this.Write("\tDECLARE @old_");
            
            #line 2279 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dateTimeMarkColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" DATETIME\r\n\t\r\n\tSELECT @old_");
            
            #line 2281 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dateTimeMarkColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 2281 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dateTimeMarkColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\tFROM ");
            
            #line 2282 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" WHERE\r\n\t(\r\n\t\t\t");
            
            #line 2284 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

				str_and = "";
				foreach (TableColumnSchema column in tableSchema.PrimaryKey)
				{
					Write(str_and + "		" + column.Name + " = @" +column.Name);
					str_and = "AND ";
				}
				WriteLine("");
			
            
            #line default
            #line hidden
            this.Write("\t)\r\n\t\r\n\tIF @");
            
            #line 2295 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dateTimeMarkColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" != @old_");
            
            #line 2295 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dateTimeMarkColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\tBEGIN\r\n\t\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName" +
                    ", Severity)\r\n\t\tSELECT\r\n\t\t\t\'Ошибка при изменении записи: параметры объекта были и" +
                    "зменены другим пользователем: ");
            
            #line 2299 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("[" + EntityNamespace + "] " + GetEntityName()));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\tNULL,\r\n\t\t\tNULL,\r\n\t\t\t2\r\n\tEND\t\t\r\n\t");
            
            #line 2304 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		}
	
            
            #line default
            #line hidden
            this.Write(@"	--endregion
	
END TRY
BEGIN CATCH
    SELECT 
        @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE()

    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState)
	RETURN(-1)
END CATCH
--endregion

IF NOT EXISTS (SELECT 0 FROM @ErrorList WHERE Severity != 1)
BEGIN TRY
	BEGIN TRANSACTION

	--region Обработка порядкового номера
	");
            
            #line 2324 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		if (this.foreignKeyToParentSchema != null && this.sequenceNumberColumnSchema != null)
		{
	
            
            #line default
            #line hidden
            this.Write("\tDECLARE @MaxSquenceNumber INT\r\n\t\r\n\tSELECT @MaxSquenceNumber = ISNULL(MAX(");
            
            #line 2330 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sequenceNumberColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write("), 0) FROM ");
            
            #line 2330 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" WHERE\r\n\t(\r\n\t\t");
            
            #line 2332 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

			str_and = "";
			foreach (ForeignKeyColumnPairSchema fk_column in foreignKeyToParentSchema.ColumnPairs)
			{
				Write(str_and + "		" + tableSchema.Name + "." + fk_column.ForeignKeyColumnName + " = @" + fk_column.ForeignKeyColumnName);
				str_and = "AND ";
			}
			WriteLine("");
		
            
            #line default
            #line hidden
            this.Write("\t)\r\n\t\r\n\tUPDATE ");
            
            #line 2343 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" SET\r\n\t\t");
            
            #line 2344 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 2344 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sequenceNumberColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" = @MaxSquenceNumber + 1\r\n\tWHERE\r\n\t(\t\r\n\t\t");
            
            #line 2347 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
str_and = "";
		foreach (TableColumnSchema column in tableSchema.PrimaryKey) {
            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 2349 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(str_and + column.Name));
            
            #line default
            #line hidden
            this.Write(" = @");
            
            #line 2349 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t");
            
            #line 2350 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
str_and = "AND ";}
            
            #line default
            #line hidden
            this.Write("\t)\r\n\t");
            
            #line 2352 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\r\n\t--region логическое восстановление объекта\r\n\tUPDATE ");
            
            #line 2358 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" SET ");
            
            #line 2358 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(deleteFlagColumnSchema.Name));
            
            #line default
            #line hidden
            this.Write(" = 0\r\n\tWHERE\r\n\t(\t\r\n\t\t");
            
            #line 2361 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
str_and = "";
		foreach (TableColumnSchema column in tableSchema.PrimaryKey) {
            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 2363 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(str_and + column.Name));
            
            #line default
            #line hidden
            this.Write(" = @");
            
            #line 2363 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t");
            
            #line 2364 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
str_and = "AND ";}
            
            #line default
            #line hidden
            this.Write(@"	)
	--endregion
	
	COMMIT TRANSACTION
END TRY
BEGIN CATCH
    SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE()

	IF XACT_STATE() <> 0
    BEGIN
        ROLLBACK TRANSACTION
    END
	
    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
END CATCH

SET @ErrorMessages =
(
	SELECT Message, AttributeName, AttributeFriendlyName, Severity
	FROM @ErrorList as EL
	ORDER BY EL.Severity DESC, EL.AttributeName
	FOR XML RAW('row'), ROOT ('root')
)

IF EXISTS (SELECT 0 FROM @ErrorList)
	RETURN(1)
ELSE
	RETURN(0)
GO

IF @@ERROR != 0
BEGIN
	SET NOEXEC ON
END

GO

");
            
            #line 2402 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

}

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 2406 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

if (DeleteByParentObject)
{

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 2411 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DatabaseSchema.StoredProcedures.Contains(GetProcedureName("DeleteByParentObject")) ? "ALTER" : "CREATE"));
            
            #line default
            #line hidden
            this.Write(" PROCEDURE dbo.");
            
            #line 2411 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("DeleteByParentObject")));
            
            #line default
            #line hidden
            this.Write("\r\n(\r\n\t--region Объявление параметров\r\n\t");
            
            #line 2414 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		str_and = "";
		foreach (ForeignKeyColumnPairSchema column in foreignKeyToParentSchema.ColumnPairs)
		{
			Write(str_and + "	" + GetParameterDeclaration2(foreignKeyToParentSchema.ChildTable[column.ForeignKeyColumnName], false));
			str_and = "," + Environment.NewLine;
		}
		Write("," + Environment.NewLine);
	
            
            #line default
            #line hidden
            this.Write(@"	@ErrorMessages XML OUTPUT
	--endregion
)
AS
SET NOCOUNT ON

--region Объявление переменных
DECLARE @ObjectID INT
DECLARE @ErrorList TABLE
(
	Message VARCHAR(2000),
	AttributeName VARCHAR(128) NULL,
	AttributeFriendlyName VARCHAR(200) NULL,
	Severity INT
)
DECLARE @ErrorMessage NVARCHAR(4000)
DECLARE @ErrorSeverity INT
DECLARE @ErrorState INT
--endregion

--region Проверки
BEGIN TRY
	--region Проверка заполнения параметров
	");
            
            #line 2446 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		str_and = "";
		foreach (ForeignKeyColumnPairSchema column in foreignKeyToParentSchema.ColumnPairs)
		{
	
            
            #line default
            #line hidden
            this.Write("\tIF @");
            
            #line 2451 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.ForeignKeyColumnName));
            
            #line default
            #line hidden
            this.Write(" IS NULL\r\n\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName," +
                    " Severity)\r\n\tSELECT\r\n\t\t\'Не задано значение параметра: @");
            
            #line 2454 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.ForeignKeyColumnName));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\tNULL,\r\n\t\tNULL,\r\n\t\t2\r\n\t\t\r\n\t");
            
            #line 2459 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\r\n\t--region Проверка корректности ссылки\r\n\tIF NOT EXISTS \r\n\t(\r\n\t\tSE" +
                    "LECT 0 FROM ");
            
            #line 2467 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(foreignKeyToParentSchema.ParentTable.Name));
            
            #line default
            #line hidden
            this.Write(" WHERE\r\n\t\t(\r\n\t\t\t");
            
            #line 2469 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

				str_and = "";
				foreach (ForeignKeyColumnPairSchema fk_column in this.foreignKeyToParentSchema.ColumnPairs)
				{
					Write(str_and + "			" + foreignKeyToParentSchema.ParentTableName + "." + fk_column.PrimaryKeyColumnName + " = @" + fk_column.ForeignKeyColumnName);
					str_and = "AND ";
				}
				WriteLine("");
			
            
            #line default
            #line hidden
            this.Write(@"		)
	)
	BEGIN
		INSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName, Severity)
		SELECT
			'Некорректная ссылка на родительский объект',
			NULL,
			NULL,
			2
	END
	--endregion

END TRY
BEGIN CATCH
    SELECT 
        @ErrorMessage = ERROR_MESSAGE(),
        @ErrorSeverity = ERROR_SEVERITY(),
        @ErrorState = ERROR_STATE();

    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState)
	RETURN(-1)
END CATCH
--endregion

IF NOT EXISTS (SELECT 0 FROM @ErrorList WHERE Severity != 1)
BEGIN TRY
	BEGIN TRANSACTION

	--region Удаление
");
            
            #line 2507 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

	if (deleteFlagColumnSchema == null)
	{

            
            #line default
            #line hidden
            this.Write("\t\r\n\tDELETE FROM ");
            
            #line 2511 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\tWHERE\r\n\t");
            
            #line 2513 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		str_and = "";
		foreach (ForeignKeyColumnPairSchema column in foreignKeyToParentSchema.ColumnPairs)
		{
			Write(str_and + "		" + column.ForeignKeyColumnName + " = @" + column.ForeignKeyColumnName);
			str_and = " AND" + Environment.NewLine;
		}
		Write(Environment.NewLine);
	
            
            #line default
            #line hidden
            
            #line 2522 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

}

            
            #line default
            #line hidden
            this.Write(@"	--endregion
	
	COMMIT TRANSACTION
END TRY
BEGIN CATCH
    SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE()

	IF XACT_STATE() <> 0
    BEGIN
        ROLLBACK TRANSACTION;
    END
	
    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
END CATCH

SET @ErrorMessages =
(
	SELECT Message, AttributeName, AttributeFriendlyName, Severity
	FROM @ErrorList AS EL
	ORDER BY EL.Severity DESC, EL.AttributeName
	FOR XML RAW('row'), ROOT ('root')
)

IF EXISTS (SELECT 0 FROM @ErrorList)
	RETURN(1)
ELSE
	RETURN(0)
	
GO

IF @@ERROR != 0
BEGIN
	SET NOEXEC ON
END

GO

");
            
            #line 2562 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

}

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 2566 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

if (CopyByParentObject)
{

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 2571 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DatabaseSchema.StoredProcedures.Contains(GetProcedureName("CopyByParentObject")) ? "ALTER" : "CREATE"));
            
            #line default
            #line hidden
            this.Write(" PROCEDURE dbo.");
            
            #line 2571 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("CopyByParentObject")));
            
            #line default
            #line hidden
            this.Write("\r\n(\r\n\t--region Объявление параметров\r\n\t");
            
            #line 2574 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		//Внешний ключ, ссылающийся на исходный объект
		str_and = "";
		foreach (ForeignKeyColumnPairSchema column in foreignKeyToParentSchema.ColumnPairs)
		{
			Write(str_and + "	" + GetParameterDeclaration2(foreignKeyToParentSchema.ChildTable[column.ForeignKeyColumnName], false, "Source"));
			str_and = "," + Environment.NewLine;
		}
		//Внешний ключ, ссылающийся на новый объект
		foreach (ForeignKeyColumnPairSchema column in foreignKeyToParentSchema.ColumnPairs)
		{
			Write(str_and + "	" + GetParameterDeclaration2(foreignKeyToParentSchema.ChildTable[column.ForeignKeyColumnName], false, "Destination"));
			str_and = "," + Environment.NewLine;
		}
		Write("," + Environment.NewLine);
	
            
            #line default
            #line hidden
            this.Write(@"	@ErrorMessages XML OUTPUT
	--endregion
)
AS
SET NOCOUNT ON

--region Объявление переменных
DECLARE @ObjectID INT
DECLARE @ErrorList TABLE
(
	Message VARCHAR(2000),
	AttributeName VARCHAR(128) NULL,
	AttributeFriendlyName VARCHAR(200) NULL,
	Severity INT
)
DECLARE @ErrorMessage NVARCHAR(4000)
DECLARE @ErrorSeverity INT
DECLARE @ErrorState INT
--endregion

--region Проверки
BEGIN TRY
	--region Проверка заполнения параметров
	");
            
            #line 2613 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		str_and = "";
		foreach (ForeignKeyColumnPairSchema column in foreignKeyToParentSchema.ColumnPairs)
		{
	
            
            #line default
            #line hidden
            this.Write("\tIF @Source");
            
            #line 2618 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.ForeignKeyColumnName));
            
            #line default
            #line hidden
            this.Write(" IS NULL\r\n\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName," +
                    " Severity)\r\n\tSELECT\r\n\t\t\'Не задано значение параметра: @Source");
            
            #line 2621 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.ForeignKeyColumnName));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\tNULL,\r\n\t\tNULL,\r\n\t\t2\r\n\t\t\r\n\t");
            
            #line 2626 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		}
		//Внешний ключ, ссылающийся на новый объект
		foreach (ForeignKeyColumnPairSchema column in foreignKeyToParentSchema.ColumnPairs)
		{
	
            
            #line default
            #line hidden
            this.Write("\tIF @Destination");
            
            #line 2632 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.ForeignKeyColumnName));
            
            #line default
            #line hidden
            this.Write(" IS NULL\r\n\tINSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName," +
                    " Severity)\r\n\tSELECT\r\n\t\t\'Не задано значение параметра: @Destination");
            
            #line 2635 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.ForeignKeyColumnName));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\tNULL,\r\n\t\tNULL,\r\n\t\t2\r\n\r\n\t");
            
            #line 2640 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\r\n\t--region Проверка корректности ссылок\r\n\r\n\t--region Проверка суще" +
                    "ствования объекта-источника\r\n\tIF NOT EXISTS \r\n\t(\r\n\t\tSELECT 0 FROM ");
            
            #line 2650 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(foreignKeyToParentSchema.ParentTable.Name));
            
            #line default
            #line hidden
            this.Write(" WHERE\r\n\t\t(\r\n\t\t\t");
            
            #line 2652 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

				str_and = "";
				foreach (ForeignKeyColumnPairSchema fk_column in this.foreignKeyToParentSchema.ColumnPairs)
				{
					Write(str_and + "			" + foreignKeyToParentSchema.ParentTableName + "." + fk_column.PrimaryKeyColumnName + " = @Source" + fk_column.ForeignKeyColumnName);
					str_and = "AND ";
				}
				WriteLine("");
			
            
            #line default
            #line hidden
            this.Write(@"		)
	)
	BEGIN
		INSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName, Severity)
		SELECT
			'Некорректная ссылка на родительский объект - источник',
			NULL,
			NULL,
			2
	END
	--endregion
	
	--region Проверка существования целевого объекта
	IF NOT EXISTS 
	(
		SELECT 0 FROM ");
            
            #line 2676 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.foreignKeyToParentSchema.ParentTable.Name));
            
            #line default
            #line hidden
            this.Write(" WHERE\r\n\t\t(\r\n\t\t\t");
            
            #line 2678 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

				str_and = "";
				foreach (ForeignKeyColumnPairSchema fk_column in foreignKeyToParentSchema.ColumnPairs)
				{
					Write(str_and + "			" + foreignKeyToParentSchema.ParentTable.Name + "." + fk_column.PrimaryKeyColumnName + " = @Destination" + fk_column.ForeignKeyColumnName);
					str_and = "AND ";
				}
				WriteLine("");
			
            
            #line default
            #line hidden
            this.Write(@"		)
	)
	BEGIN
		INSERT INTO @ErrorList (Message, AttributeName, AttributeFriendlyName, Severity)
		SELECT
			'Некорректная ссылка на целевой родительский объект',
			NULL,
			NULL,
			2
	END
	--endregion
	
	--endregion

END TRY
BEGIN CATCH
    SELECT 
        @ErrorMessage = ERROR_MESSAGE(),
        @ErrorSeverity = ERROR_SEVERITY(),
        @ErrorState = ERROR_STATE();

    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState)
	RETURN(-1)
END CATCH
--endregion

IF NOT EXISTS (SELECT 0 FROM @ErrorList WHERE Severity != 1)
BEGIN TRY
	BEGIN TRANSACTION

	--region Копирование
	");
            
            #line 2718 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		if (dateTimeMarkColumnSchema != null)
		{
	
            
            #line default
            #line hidden
            this.Write("\tDECLARE @DateTimeVersion DATETIME\r\n\tSET @DateTimeVersion = GETDATE()\r\n\t");
            
            #line 2724 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		}
	
            
            #line default
            #line hidden
            this.Write("\t\r\n\tINSERT INTO ");
            
            #line 2728 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t(\r\n\t");
            
            #line 2730 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		str_and = "";
		foreach (TableColumnSchema column in tableSchema.Columns)
			if (!column.IsIdentity)
			{
				Write(str_and + "		" + column.Name);
				str_and = "," + Environment.NewLine;
			}			
		Write(Environment.NewLine);
	
            
            #line default
            #line hidden
            this.Write("\t)\r\n\tSELECT\r\n\t");
            
            #line 2742 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		str_and = "";
		foreach (TableColumnSchema column in tableSchema.Columns)
		{
			bool contained = false;
			foreach (ForeignKeyColumnPairSchema columnPair in foreignKeyToParentSchema.ColumnPairs)
				if (columnPair.ForeignKeyColumnName == column.Name)
				{
					contained = true;
					break;
				}

			if (dateTimeMarkColumnSchema != null && column.Name == dateTimeMarkColumnSchema.Name)
			{
				Write(str_and + "		@DateTimeVersion");
				str_and = "," + Environment.NewLine;
			}
			else if (contained)
			{
				Write(str_and + "		@Destination" + column.Name);
				str_and = "," + Environment.NewLine;
			}
			else if (!column.IsIdentity)
			{
				Write(str_and + "		" + column.Name);
				str_and = "," + Environment.NewLine;
			}
		}
		Write(Environment.NewLine);
	
            
            #line default
            #line hidden
            this.Write("\tFROM ");
            
            #line 2772 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\tWHERE\r\n\t");
            
            #line 2774 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

		str_and = "";
		foreach (ForeignKeyColumnPairSchema column in foreignKeyToParentSchema.ColumnPairs)
		{
			Write(str_and + "		" + column.ForeignKeyColumnName + " = @Source" + column.ForeignKeyColumnName);
			str_and = " AND" + Environment.NewLine;
		}
		Write(Environment.NewLine);
	
            
            #line default
            #line hidden
            this.Write(@"	--endregion
	
	COMMIT TRANSACTION
END TRY
BEGIN CATCH
    SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE()

	IF XACT_STATE() <> 0
    BEGIN
        ROLLBACK TRANSACTION;
    END
	
    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
END CATCH

SET @ErrorMessages =
(
	SELECT Message, AttributeName, AttributeFriendlyName, Severity
	FROM @ErrorList AS EL
	ORDER BY EL.Severity DESC, EL.AttributeName
	FOR XML RAW('row'), ROOT ('root')
)

IF EXISTS (SELECT 0 FROM @ErrorList)
	RETURN(1)
ELSE
	RETURN(0)
	
GO

");
            
            #line 2813 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\PlainObject\PlainObjectStoredProcedureTemplate.tt"

}

            
            #line default
            #line hidden
            this.Write("\r\nIF @@ERROR != 0\r\nBEGIN\r\n\tSET NOEXEC ON\r\nEND\r\n\r\nGO\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")]
    public class PlainObjectStoredProcedureTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
    }
    #endregion
}
