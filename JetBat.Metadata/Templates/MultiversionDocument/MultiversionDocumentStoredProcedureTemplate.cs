// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 10.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace JetBat.Metadata.Templates.MultiversionDocument
{
    using JetBat.DatabaseSchema;
    using System;
    
    
    #line 1 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")]
    public partial class MultiversionDocumentStoredProcedureTemplate : MultiversionDocumentStoredProcedureTemplateBase
    {
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
        public virtual string TransformText()
        {
            this.GenerationEnvironment = null;
            this.Write("USE [");
            
            #line 4 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DatabaseName));
            
            #line default
            #line hidden
            this.Write("]\r\nSET NOEXEC OFF\r\nSET ANSI_NULLS ON\r\nSET QUOTED_IDENTIFIER ON\r\nSET NOCOUNT ON\r\nG" +
                    "O\r\n\r\n--region Create\r\n--region Delegate AfterCreate\r\n");
            
            #line 13 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

	if (AfterCreate)
	{

            
            #line default
            #line hidden
            this.Write("IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N\'");
            
            #line 17 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("AfterCreate")));
            
            #line default
            #line hidden
            this.Write("\') AND OBJECTPROPERTY(id, N\'IsProcedure\') = 1)\r\nEXEC\r\n(\'\r\nCREATE PROCEDURE dbo.[");
            
            #line 20 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("AfterCreate")));
            
            #line default
            #line hidden
            this.Write(@"]
@DocumentID int,
@VersionID int
AS
begin

SET NOCOUNT ON;

--declare @StartTransaction bit;
--declare @ErrorMessage nvarchar(4000), @ErrorSeverity int, @ErrorState int;
--declare @КодОшибки int;

--SET @КодОшибки = 0;
--SET @StartTransaction = 0;

--begin try
--	IF @@trancount = 0
--	begin
--		BEGIN TRAN;
--		SET @StartTransaction = 1;
--	end

--	IF @StartTransaction = 1
--	begin
--		COMMIT TRAN;
--	end
--end try
--begin catch
--	SELECT @ErrorMessage = error_message(), @ErrorSeverity = error_severity(), @ErrorState = error_state();
--	SET @КодОшибки = -1;

--	IF xact_state() <> 0 and @StartTransaction = 1
--	begin
--		ROLLBACK TRAN;
--	end

--	RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
--end catch

ENDPROC:
--	return(@КодОшибки);
end
')
GO
");
            
            #line 64 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

	}

            
            #line default
            #line hidden
            this.Write("--endregion\r\n\r\n--region Method Stored Procedure\r\n");
            
            #line 70 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DatabaseSchema.StoredProcedures.Contains(GetProcedureName("Create")) ? "ALTER" : "CREATE"));
            
            #line default
            #line hidden
            this.Write(" PROCEDURE [dbo].[");
            
            #line 70 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("Create")));
            
            #line default
            #line hidden
            this.Write(@"]
	@DocumentID int OUTPUT,
	@VersionID int OUTPUT
AS
begin

SET NOCOUNT ON;

--region Declarations
declare @ErrorMessage nvarchar(4000), @ErrorSeverity int, @ErrorState int;
declare @StartTransaction bit;

declare @Metadata_MultiversionDocumentID int;
declare @КодОшибки int;
--endregion

SET @КодОшибки = 0;
SET @StartTransaction = 0;

begin try
	IF @@trancount = 0
	begin
		BEGIN TRAN;
		SET @StartTransaction = 1;
	end

	--region Creating new multiversion document
	SELECT @Metadata_MultiversionDocumentID = DocDefine.ID 
	FROM dbo.MultiversionDocument_DocumentDefinition as DocDefine
	WHERE DocDefine.Namespace = '");
            
            #line 99 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityNamespace));
            
            #line default
            #line hidden
            this.Write("\' \r\n\t\tand DocDefine.Name = \'");
            
            #line 100 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityName));
            
            #line default
            #line hidden
            this.Write(@"';
	
	INSERT dbo.MultiversionDocument_Document(DocumentStateID,CurrentVersionID,Metadata_MultiversionDocumentID)
	VALUES(0,null,@Metadata_MultiversionDocumentID);
	
	SELECT @DocumentID = scope_identity();
	--endregion

	--region Creating version for a new document
	INSERT dbo.MultiversionDocument_DocumentVersion (DocumentID, DocumentVersionStateID)
	VALUES (@DocumentID, 0);
	
	SELECT @VersionID = scope_identity();
	
	INSERT ");
            
            #line 114 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" (ID)VALUES(@VersionID);\r\n\t\r\n\tUPDATE dbo.MultiversionDocument_Document\r\n\tSET dbo." +
                    "MultiversionDocument_Document.CurrentVersionID = @VersionID\r\n\tWHERE dbo.Multiver" +
                    "sionDocument_Document.ID = @DocumentID;\r\n\t--endregion\r\n\r\n\t--region Call of After" +
                    "Create\r\n\t");
            
            #line 122 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

		if (AfterCreate)
		{
	
            
            #line default
            #line hidden
            this.Write("\t\texec dbo.");
            
            #line 126 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("AfterCreate")));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t@DocumentID = @DocumentID,\r\n\t\t\t@VersionID = @VersionID\r\n\t\t;\r\n\t");
            
            #line 130 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

		}
	
            
            #line default
            #line hidden
            this.Write(@"	--endregion
	
	IF @StartTransaction = 1
	begin
		COMMIT TRAN;
	end
end try
begin catch
	SELECT @ErrorMessage = error_message(), @ErrorSeverity = error_severity(), @ErrorState = error_state();
	SET @КодОшибки = -1;
	
	IF xact_state() <> 0 and @StartTransaction = 1
	begin
		ROLLBACK TRAN;
	end

	RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
end catch

ENDPROC:
	return (@КодОшибки);
end
GO
--endregion
--endregion

--region StartEdit
");
            
            #line 160 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DatabaseSchema.StoredProcedures.Contains(GetProcedureName("StartEdit")) ? "ALTER" : "CREATE"));
            
            #line default
            #line hidden
            this.Write(" PROCEDURE [dbo].[");
            
            #line 160 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("StartEdit")));
            
            #line default
            #line hidden
            this.Write(@"]
	@DocumentID int,
	@VersionID int OUTPUT
AS
begin

SET NOCOUNT ON;

--region Declarations
--declare @ErrorList table(Message varchar(2000),AttributeName varchar(128),AttributeFriendlyName varchar(200),Severity int);
declare @ErrorMessage nvarchar(4000), @ErrorSeverity int, @ErrorState int;
declare @StartTransaction bit;

declare @CurrentVersionID int;
declare @КодОшибки int;
--endregion

SET @КодОшибки = 0;
SET @StartTransaction = 0;

begin try
	--region Checks
	if (@DocumentID is null) 
	begin
		RAISERROR('Parameter @DocumentID is set to NULL', 16, -1)
	end
	--endregion

	IF @@trancount = 0
	begin
		BEGIN TRAN;
		SET @StartTransaction = 1;
	end

	--region Loading document's current version
	SELECT @CurrentVersionID = Document.CurrentVersionID 
	FROM dbo.MultiversionDocument_Document as Document
	WHERE Document.ID = @DocumentID;
	
	if @CurrentVersionID is null
	begin
		SET @ErrorMessage = 'Document does not have an actual vaersion. It is in process of creation, or damaged, so it can not be edited. ID = ' + cast(@DocumentID as varchar(20));
		RAISERROR(@ErrorMessage , 16, -2);
	end
	--endregion

	--region Duplication of document's actual version
	
	--region Duplication of the document's header
	INSERT dbo.MultiversionDocument_DocumentVersion (DocumentID, DocumentVersionStateID)
	VALUES (@DocumentID, 0 );
	
	SELECT @VersionID = scope_identity();
	
	INSERT ");
            
            #line 214 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t(\r\n\t\t\tID,\r\n\t");
            
            #line 217 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

		str_and = "";
		foreach (TableColumnSchema column in tableSchema.Columns)
			if
			(
				!column.IsPrimaryKeyMember
			)
			{
				Write(str_and + "			" + column.Name);
				str_and = "," + Environment.NewLine;
			}
	
            
            #line default
            #line hidden
            this.Write("\t\t)\r\n\tSELECT \r\n\t\t@VersionID,\r\n\t");
            
            #line 232 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

		str_and = "";
		foreach (TableColumnSchema column in tableSchema.Columns)
			if
			(
				!column.IsPrimaryKeyMember
			)
			{
				Write(str_and + "		" + tableSchema.Name + "." + column.Name);
				str_and = "," + Environment.NewLine;
			}
	
            
            #line default
            #line hidden
            this.Write("\tFROM ");
            
            #line 244 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\tWHERE ");
            
            #line 245 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(".ID = @CurrentVersionID;\r\n\t--endregion\r\n\t\r\n\t--region Duplication on child objects" +
                    "\r\n\t");
            
            #line 249 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

		ChildObject[] child_objects = GetChildObjectList();
		if (child_objects != null)
		{
			foreach (ChildObject child_object in child_objects)
				if (child_object != null && child_object.CopyByParentObjectProcedureName != String.Empty)
				{
	
            
            #line default
            #line hidden
            this.Write("\texec dbo.");
            
            #line 257 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(child_object.CopyByParentObjectProcedureName));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t@SourceDocumentversionID = @CurrentVersionID,\r\n\t\t@DestinationDocumentVersionI" +
                    "D = @VersionID,\r\n\t\t@ErrorMessages = null\r\n\t\t;\r\n\t");
            
            #line 262 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

				}
		}
	
            
            #line default
            #line hidden
            this.Write(@"	--endregion
	
	--endregion

	IF @StartTransaction = 1
	begin
		COMMIT TRAN;
	end
end try
begin catch
	SELECT @ErrorMessage = error_message(), @ErrorSeverity = error_severity(), @ErrorState = error_state();
	SET @КодОшибки = -1;
	
	IF xact_state() <> 0 and @StartTransaction = 1
	begin
		ROLLBACK TRAN;
	end

	RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
end catch

ENDPROC:
	return (@КодОшибки);
end
GO
--endregion

--region UpdateVersion
--region Delegate BeforeUpdateVersion
");
            
            #line 295 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

	if (BeforeUpdateVersion)
	{

            
            #line default
            #line hidden
            this.Write("IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N\'");
            
            #line 299 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("BeforeUpdateVersion")));
            
            #line default
            #line hidden
            this.Write("\') AND OBJECTPROPERTY(id, N\'IsProcedure\') = 1)\r\nEXEC\r\n(\'\r\nCREATE PROCEDURE dbo.[");
            
            #line 302 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("BeforeUpdateVersion")));
            
            #line default
            #line hidden
            this.Write("]\r\n\t@VersionID int,\r\n");
            
            #line 304 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

	str_and = "";
	foreach (TableColumnSchema column in tableSchema.Columns)
		if
		(
			!column.IsPrimaryKeyMember &&
			!ColumnIsReadOnly(column.Name) &&			
			column.Name != "DocumentVersionID"			
		)
		{
			Write(str_and + "	" + GetParameterDeclaration(column, true));
			str_and = "," + Environment.NewLine;
		}
	Write("," + Environment.NewLine);
	
            
            #line default
            #line hidden
            this.Write("\t@ErrorMessages xml OUTPUT\r\nAS\r\nbegin\r\n\r\nSET NOCOUNT ON;\r\n\r\n--declare @ErrorList " +
                    "table(Message varchar(2000),AttributeName varchar(128),AttributeFriendlyName var" +
                    "char(200),Severity int);\r\n--declare @StartTransaction bit;\r\n--declare @ErrorMess" +
                    "age nvarchar(4000), @ErrorSeverity int, @ErrorState int;\r\n--declare @КодОшибки i" +
                    "nt;\r\n\r\n--SET @КодОшибки = 0;\r\n--\tINSERT @ErrorList (Message, AttributeName, Attr" +
                    "ibuteFriendlyName, Severity)\r\n--\tSELECT\r\n--\t\t\'\'Error Message\'\',\r\n--\t\tNULL,\r\n--\t\t" +
                    "NULL,\r\n--\t\t2\r\n--\t;\r\n\r\n--IF not exists(SELECT 1 FROM @ErrorList as q1 WHERE q1.Se" +
                    "verity >= 2)\r\n--begin\r\n--\tSET @StartTransaction = 0;\r\n\r\n--\tbegin try\r\n--\t\tIF @@t" +
                    "rancount = 0\r\n--\t\tbegin\r\n--\t\t\tBEGIN TRAN;\r\n--\t\t\tSET @StartTransaction = 1;\r\n--\t\t" +
                    "end\r\n\r\n--\t\tIF @StartTransaction = 1\r\n--\t\tbegin\r\n--\t\t\tCOMMIT TRAN;\r\n--\t\tend\r\n--\te" +
                    "nd try\r\n--\tbegin catch\r\n--\t\tSELECT @ErrorMessage = error_message(), @ErrorSeveri" +
                    "ty = error_severity(), @ErrorState = error_state();\r\n--\t\tSET @КодОшибки = -1;\r\n\r" +
                    "\n--\t\tIF xact_state() <> 0 and @StartTransaction = 1\r\n--\t\tbegin\r\n--\t\t\tROLLBACK TR" +
                    "AN;\r\n--\t\tend\r\n\r\n--\t\tRAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);\r\n--\t" +
                    "end catch\r\n--end\r\n\r\n--IF @КодОшибки <> -1\r\n--begin\r\n--\tSELECT TOP 1 @КодОшибки =" +
                    " EL.Severity\r\n--\tFROM @ErrorList as EL\r\n--\tORDER BY EL.Severity desc;\r\n--end\r\n\r\n" +
                    "ENDPROC:\r\n--\tSET @ErrorMessages =\r\n--\t\t\t\t(\r\n--\t\t\t\t\tSELECT Message, AttributeName" +
                    ", AttributeFriendlyName, Severity\r\n--\t\t\t\t\tFROM @ErrorList AS EL\r\n--\t\t\t\t\tORDER BY" +
                    " EL.Severity DESC, EL.AttributeName\r\n--\t\t\t\t\tFOR XML RAW(\'\'row\'\'), ROOT (\'\'root\'\'" +
                    ")\r\n--\t\t\t\t);\r\n--\treturn (@КодОшибки);\r\nend\r\n\')\r\nGO\r\n");
            
            #line 387 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

	}

            
            #line default
            #line hidden
            this.Write("--endregion\r\n\r\n--region Method Stored Procedure\r\n");
            
            #line 393 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DatabaseSchema.StoredProcedures.Contains(GetProcedureName("UpdateVersion")) ? "ALTER" : "CREATE"));
            
            #line default
            #line hidden
            this.Write(" PROCEDURE [dbo].[");
            
            #line 393 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("UpdateVersion")));
            
            #line default
            #line hidden
            this.Write("]\r\n\t@VersionID int,\r\n");
            
            #line 395 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

	foreach (TableColumnSchema column in tableSchema.Columns)
		if
		(
			!column.IsPrimaryKeyMember &&
			!ColumnIsReadOnly(column.Name) &&			
			column.Name != "DocumentVersionID"			
		)
		{
			Write("	" + GetParameterDeclaration(column, false) + "," + Environment.NewLine);
		}
	
            
            #line default
            #line hidden
            this.Write(@"	@ErrorMessages xml OUTPUT
AS
begin

SET NOCOUNT ON;

--region Declarations
declare @ErrorList table(Message varchar(2000),AttributeName varchar(128),AttributeFriendlyName varchar(200),Severity int);
declare @ErrorMessage nvarchar(4000), @ErrorSeverity int, @ErrorState int;
declare @StartTransaction bit;
declare @КодОшибки int;

declare @DocumentID int;

declare @ExistsLogicalErrors bit;
--endregion

SET @КодОшибки = 0;
SET @StartTransaction = 0;
SET @ExistsLogicalErrors = 0;

begin try
	--region Checks
	IF (@VersionID is null) 
	begin
		RAISERROR('Не задан код версии: @VersionID', 16, -1);
	end
	--endregion

	IF @@trancount = 0
	begin
		BEGIN TRAN;
		SET @StartTransaction = 1;
	end
	
	--region Call of BeforeUpdateVersion
	");
            
            #line 443 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
 if (BeforeUpdateVersion) { 
            
            #line default
            #line hidden
            this.Write("\r\n\texec dbo.");
            
            #line 445 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("BeforeUpdateVersion")));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t@VersionID = @VersionID,\r\n\t\t");
            
            #line 447 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

			str_and = "";
			foreach (TableColumnSchema column in tableSchema.Columns)
				if
				(
					!column.IsPrimaryKeyMember &&
					column.Name != "DocumentVersionID" &&
					!ColumnIsReadOnly(column.Name)
				)
				{
					Write(str_and + "		@" + column.Name + " = @" + column.Name + " OUTPUT");
					str_and = "," + Environment.NewLine;
				}
			Write("," + Environment.NewLine);
		
            
            #line default
            #line hidden
            this.Write(@"		@ErrorMessages = @ErrorMessages OUTPUT
		;
		
	INSERT @ErrorList (Message, AttributeName, AttributeFriendlyName, Severity)
	SELECT b.value('@Message' , 'varchar(2000)') as Сообщение, 
		b.value('@AttributeName' , 'varchar(128)') as ИмяАтрибута,
		b.value('@AttributeFriendlyName' , 'varchar(200)') as ПсевдонимАтрибута,
		b.value('@Severity' , 'int') as СуровостьОшибки
	FROM @ErrorMessages.nodes('/root/row') a(b);
	
	IF exists(SELECT 1 FROM @ErrorList as EL WHERE EL.Severity >=2)
	begin
		SET @ExistsLogicalErrors = 1;
		RAISERROR('Exists critical error.',16,-1);
	end

	");
            
            #line 478 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\r\n\t--region Updating the version\r\n\tUPDATE ");
            
            #line 482 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" \r\n\tSET\r\n\t");
            
            #line 484 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

		str_and = "";
		foreach (TableColumnSchema column in tableSchema.Columns)
		if
		(
			!column.IsPrimaryKeyMember &&
			!ColumnIsReadOnly(column.Name)
		)
		{
			Write(str_and + "	" + column.Name + " = @" + column.Name);
			str_and = "," + Environment.NewLine;
		}
	
            
            #line default
            #line hidden
            
            #line 496 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
 
            
            #line default
            #line hidden
            this.Write("\tWHERE ");
            
            #line 497 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(@".ID = @VersionID
	--endregion

	IF @StartTransaction = 1
	begin
		COMMIT TRAN;
	end
end try
begin catch
	SELECT @ErrorMessage = error_message(), @ErrorSeverity = error_severity(), @ErrorState = error_state();
	
	IF @ExistsLogicalErrors = 0
	begin
		SET @КодОшибки = -1;
	end
	
	IF xact_state() <> 0 and @StartTransaction = 1
	begin
		ROLLBACK TRAN;
	end
	
	IF @ExistsLogicalErrors = 0
	begin
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	end
end catch

IF @КодОшибки <> -1
begin
	SELECT TOP 1 @КодОшибки = EL.Severity
	FROM @ErrorList as EL
	ORDER BY EL.Severity desc;
end

ENDPROC:
	SET @ErrorMessages =
				(
					SELECT Message, AttributeName, AttributeFriendlyName, Severity
					FROM @ErrorList AS EL
					ORDER BY EL.Severity DESC, EL.AttributeName
					FOR XML RAW('row'), ROOT ('root')
				);
	return (@КодОшибки);
end
GO
--endregion
--endregion

--region ConfirmEdit

--region Delegate BeforeConfirmEdit
");
            
            #line 548 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

	if (BeforeConfirmEdit)
	{

            
            #line default
            #line hidden
            this.Write("IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N\'");
            
            #line 552 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("BeforeConfirmEdit")));
            
            #line default
            #line hidden
            this.Write("\') AND OBJECTPROPERTY(id, N\'IsProcedure\') = 1)\r\nEXEC\r\n(\'\r\nCREATE PROCEDURE dbo.[");
            
            #line 555 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("BeforeConfirmEdit")));
            
            #line default
            #line hidden
            this.Write("]\r\n\t@VersionID int,\r\n\t@ErrorMessages xml OUTPUT\r\nAS\r\nbegin\r\n\r\nSET NOCOUNT ON;\r\n\r\n" +
                    "--declare @ErrorList table(Message varchar(2000),AttributeName varchar(128),Attr" +
                    "ibuteFriendlyName varchar(200),Severity int);\r\n--declare @StartTransaction bit;\r" +
                    "\n--declare @ErrorMessage nvarchar(4000), @ErrorSeverity int, @ErrorState int;\r\n-" +
                    "-declare @КодОшибки int;\r\n\r\n--SET @КодОшибки = 0;\r\n\r\n--\tINSERT @ErrorList (Messa" +
                    "ge, AttributeName, AttributeFriendlyName, Severity)\r\n--\tSELECT\r\n--\t\t\'\'Error Mess" +
                    "age\'\',\r\n--\t\tNULL,\r\n--\t\tNULL,\r\n--\t\t2\r\n--\t;\r\n\r\n--IF not exists(SELECT 1 FROM @Erro" +
                    "rList as q1 WHERE q1.Severity >= 2)\r\n--begin\r\n--\tSET @StartTransaction = 0;\r\n\r\n-" +
                    "-\tbegin try\r\n--\t\tIF @@trancount = 0\r\n--\t\tbegin\r\n--\t\t\tBEGIN TRAN;\r\n--\t\t\tSET @Star" +
                    "tTransaction = 1;\r\n--\t\tend\r\n\r\n--\t\tIF @StartTransaction = 1\r\n--\t\tbegin\r\n--\t\t\tCOMM" +
                    "IT TRAN;\r\n--\t\tend\r\n--\tend try\r\n--\tbegin catch\r\n--\t\tSELECT @ErrorMessage = error_" +
                    "message(), @ErrorSeverity = error_severity(), @ErrorState = error_state();\r\n--\t\t" +
                    "SET @КодОшибки = -1;\r\n\r\n--\t\tIF xact_state() <> 0 and @StartTransaction = 1\r\n--\t\t" +
                    "begin\r\n--\t\t\tROLLBACK TRAN;\r\n--\t\tend\r\n\r\n--\t\tRAISERROR (@ErrorMessage, @ErrorSever" +
                    "ity, @ErrorState);\r\n--\tend catch\r\n--end\r\n\r\n--IF @КодОшибки <> -1\r\n--begin\r\n--\tSE" +
                    "LECT TOP 1 @КодОшибки = EL.Severity\r\n--\tFROM @ErrorList as EL\r\n--\tORDER BY EL.Se" +
                    "verity desc;\r\n--end\r\n\r\nENDPROC:\r\n--\tSET @ErrorMessages =\r\n--\t\t\t\t(\r\n--\t\t\t\t\tSELECT" +
                    " Message, AttributeName, AttributeFriendlyName, Severity\r\n--\t\t\t\t\tFROM @ErrorList" +
                    " AS EL\r\n--\t\t\t\t\tORDER BY EL.Severity DESC, EL.AttributeName\r\n--\t\t\t\t\tFOR XML RAW(\'" +
                    "\'row\'\'), ROOT (\'\'root\'\')\r\n--\t\t\t\t);\r\n--\treturn (@КодОшибки);\r\nend\r\n\')\r\nGO\r\n");
            
            #line 626 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

	}

            
            #line default
            #line hidden
            this.Write("--endregion\r\n\r\n--region Delegate AfterConfirmEdit\r\n");
            
            #line 632 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

	if (AfterConfirmEdit)
	{

            
            #line default
            #line hidden
            this.Write("IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N\'");
            
            #line 636 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("AfterConfirmEdit")));
            
            #line default
            #line hidden
            this.Write("\') AND OBJECTPROPERTY(id, N\'IsProcedure\') = 1)\r\nEXEC\r\n(\'\r\nCREATE PROCEDURE dbo.[");
            
            #line 639 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("AfterConfirmEdit")));
            
            #line default
            #line hidden
            this.Write(@"]
	@VersionID int
AS
begin

SET NOCOUNT ON;

--declare @StartTransaction bit;
--declare @ErrorMessage nvarchar(4000), @ErrorSeverity int, @ErrorState int;
--declare @КодОшибки int;

--SET @КодОшибки = 0;
--SET @StartTransaction = 0;

--begin try
--	IF @@trancount = 0
--	begin
--		BEGIN TRAN;
--		SET @StartTransaction = 1;
--	end

--	IF @StartTransaction = 1
--	begin
--		COMMIT TRAN;
--	end
--end try
--begin catch
--	SELECT @ErrorMessage = error_message(), @ErrorSeverity = error_severity(), @ErrorState = error_state();
--	SET @КодОшибки = -1;

--	IF xact_state() <> 0 and @StartTransaction = 1
--	begin
--		ROLLBACK TRAN;
--	end
	
--	RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
--end catch

ENDPROC:
--	return (@КодОшибки);
end
')
GO
");
            
            #line 682 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

	}

            
            #line default
            #line hidden
            this.Write("--endregion\r\n\r\n--region Method Stored Procedure\r\n");
            
            #line 688 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DatabaseSchema.StoredProcedures.Contains(GetProcedureName("ConfirmEdit")) ? "ALTER" : "CREATE"));
            
            #line default
            #line hidden
            this.Write(" PROCEDURE [dbo].[");
            
            #line 688 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("ConfirmEdit")));
            
            #line default
            #line hidden
            this.Write("]\r\n\t@VersionID int,\r\n\t@ErrorMessages xml OUTPUT\r\nAS\r\nbegin\r\n\r\nSET NOCOUNT ON;\r\n\r\n" +
                    "--region Declarations\r\ndeclare @ErrorList table(Message varchar(2000),AttributeN" +
                    "ame varchar(128),AttributeFriendlyName varchar(200),Severity int);\r\ndeclare @Err" +
                    "orMessage nvarchar(4000), @ErrorSeverity int, @ErrorState int;\r\ndeclare @StartTr" +
                    "ansaction bit;\r\ndeclare @КодОшибки int;\r\ndeclare @DocumentID int;\r\ndeclare @Docu" +
                    "mentStateID int;\r\n\r\ndeclare @ExistsLogicalErrors bit;\r\n--endregion\r\n\r\nSET @КодОш" +
                    "ибки = 0;\r\nSET @StartTransaction = 0;\r\nSET @ExistsLogicalErrors = 0;\r\n\r\nbegin tr" +
                    "y\r\n\t--region Checks\r\n\tIF (@VersionID is null) \r\n\tbegin\r\n\t\tRAISERROR(\'Не задан ко" +
                    "д версии: @VersionID\', 16, -1);\r\n\tend\r\n\t\r\n\tIF not exists(SELECT 0 FROM dbo.Multi" +
                    "versionDocument_DocumentVersion WHERE dbo.MultiversionDocument_DocumentVersion.I" +
                    "D = @VersionID)\r\n\tbegin\r\n\t\tSET @ErrorMessage = \'Ошибка при сохранении документа." +
                    " Подтверждаемой версии с заданным кодом не существует. ID = \' + CAST(@VersionID " +
                    "AS varchar(40))\r\n\t\tRAISERROR(@ErrorMessage, 16, -1);\r\n\tend\r\n\t\r\n\tSELECT @Document" +
                    "ID = dbo.MultiversionDocument_DocumentVersion.DocumentID,\r\n\t\t\t@DocumentStateID =" +
                    " dbo.MultiversionDocument_Document.DocumentStateID\r\n\tFROM dbo.MultiversionDocume" +
                    "nt_DocumentVersion \r\n\t\tINNER JOIN dbo.MultiversionDocument_Document ON dbo.Multi" +
                    "versionDocument_DocumentVersion.DocumentID = dbo.MultiversionDocument_Document.I" +
                    "D\r\n\tWHERE dbo.MultiversionDocument_DocumentVersion.ID = @VersionID\r\n\t\r\n\tIF coale" +
                    "sce(@DocumentStateID, -1) = 2 --проведенный документ\r\n\tbegin\r\n\t\tRAISERROR(\'Редак" +
                    "тирование допустимо только для черновиков документов.\', 16, -2);\r\n\tend\r\n\t--endre" +
                    "gion\r\n\r\n\tIF @@trancount = 0\r\n\tbegin\r\n\t\tBEGIN TRAN;\r\n\t\tSET @StartTransaction = 1;" +
                    "\r\n\tend\r\n\t\r\n\t--region Call of BeforeConfirmEdit\r\n\t");
            
            #line 743 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

		if (BeforeConfirmEdit)
		{
	
            
            #line default
            #line hidden
            this.Write("\texec dbo.");
            
            #line 747 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("BeforeConfirmEdit")));
            
            #line default
            #line hidden
            this.Write(@"
		@VersionID = @VersionID,
		@ErrorMessages = @ErrorMessages OUTPUT
		;
		
	INSERT @ErrorList (Message, AttributeName, AttributeFriendlyName, Severity)
	SELECT b.value('@Message' , 'varchar(2000)') as Сообщение, 
		b.value('@AttributeName' , 'varchar(128)') as ИмяАтрибута,
		b.value('@AttributeFriendlyName' , 'varchar(200)') as ПсевдонимАтрибута,
		b.value('@Severity' , 'int') as СуровостьОшибки
	FROM @ErrorMessages.nodes('/root/row') a(b);
	
	IF exists(SELECT 1 FROM @ErrorList as EL WHERE EL.Severity >=2)
	begin
		SET @ExistsLogicalErrors = 1;
		RAISERROR('Exists critical error.',16,-1);
	end
	");
            
            #line 764 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

		}
	
            
            #line default
            #line hidden
            this.Write(@"	--endregion	
	
	--region Changing document version's status to 'confirmed'
	UPDATE dbo.MultiversionDocument_DocumentVersion 
	SET dbo.MultiversionDocument_DocumentVersion.DocumentVersionStateID = 1 
	WHERE dbo.MultiversionDocument_DocumentVersion.ID = @VersionID;
	--endregion

	--region Upadting the CurrentVersionID column of the document
	UPDATE dbo.MultiversionDocument_Document 
	SET dbo.MultiversionDocument_Document.CurrentVersionID = @VersionID 
	WHERE dbo.MultiversionDocument_Document.ID = @DocumentID;
	--endregion

	--region Changing document status if was in process of creation
	IF @DocumentStateID = 0
	begin
		UPDATE dbo.MultiversionDocument_Document 
		SET dbo.MultiversionDocument_Document.DocumentStateID = 1 
		WHERE dbo.MultiversionDocument_Document.ID = @DocumentID;
	end
	--endregion

	--region Call of AfterConfirmEdit
	");
            
            #line 791 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

		if (AfterConfirmEdit)
		{
	
            
            #line default
            #line hidden
            this.Write("\t\texec dbo.");
            
            #line 795 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("AfterConfirmEdit")));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t@VersionID = @VersionID;\r\n\t");
            
            #line 797 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

		}
	
            
            #line default
            #line hidden
            this.Write(@"	--endregion

	IF @StartTransaction = 1
	begin
		COMMIT TRAN;
	end
end try
begin catch
	SELECT @ErrorMessage = error_message(), @ErrorSeverity = error_severity(), @ErrorState = error_state();
	
	IF @ExistsLogicalErrors = 0
	begin
		SET @КодОшибки = -1;
	end
	
	IF xact_state() <> 0 and @StartTransaction = 1
	begin
		ROLLBACK TRAN;
	end
	
	IF @ExistsLogicalErrors = 0
	begin
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	end
end catch

IF @КодОшибки <> -1
begin
	SELECT TOP 1 @КодОшибки = EL.Severity
	FROM @ErrorList as EL
	ORDER BY EL.Severity desc;
end

ENDPROC:
	SET @ErrorMessages =
				(
					SELECT Message, AttributeName, AttributeFriendlyName, Severity
					FROM @ErrorList AS EL
					ORDER BY EL.Severity DESC, EL.AttributeName
					FOR XML RAW('row'), ROOT ('root')
				);
	return (@КодОшибки);
end
GO
--endregion 

--endregion

--region CancelEdit
");
            
            #line 849 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DatabaseSchema.StoredProcedures.Contains(GetProcedureName("CancelEdit")) ? "ALTER" : "CREATE"));
            
            #line default
            #line hidden
            this.Write(" PROCEDURE [dbo].[");
            
            #line 849 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("CancelEdit")));
            
            #line default
            #line hidden
            this.Write("]\r\n\t@VersionID INT\r\nAS\r\nbegin\r\n\r\nSET NOCOUNT ON;\r\n\r\n--region Declarations\r\ndeclar" +
                    "e @ErrorMessage nvarchar(4000), @ErrorSeverity int, @ErrorState int;\r\ndeclare @S" +
                    "tartTransaction bit;\r\ndeclare @КодОшибки int;\r\n\r\ndeclare @DocumentID int\r\ndeclar" +
                    "e @DocumentStateID int\r\ndeclare @CurrentVersionID int\r\ndeclare @DocumentVersionS" +
                    "tateID int\r\n--endregion\r\n\r\nSET @КодОшибки = 0;\r\nSET @StartTransaction = 0;\r\n\r\nbe" +
                    "gin try\r\n\t--region Checks\r\n\tIF (@VersionID is null)\r\n\tbegin\r\n\t\tRAISERROR(\'Parame" +
                    "ter @VersionID is set to NULL\', 16, -1);\r\n\tend\r\n\t\r\n\tIF not exists(SELECT 0 FROM " +
                    "dbo.MultiversionDocument_DocumentVersion WHERE dbo.MultiversionDocument_Document" +
                    "Version.ID = @VersionID)\r\n\tbegin \r\n\t\tSET @ErrorMessage = \'Error discarding docum" +
                    "ent version - there is no such a version. VersionID = \' + cast(@VersionID as var" +
                    "char(40));\r\n\t\tRAISERROR(@ErrorMessage, 16, -1);\r\n\tend\r\n\t--endregion\r\n\r\n\tIF @@tra" +
                    "ncount = 0\r\n\tbegin\r\n\t\tBEGIN TRAN;\r\n\t\tSET @StartTransaction = 1;\r\n\tend\r\n\r\n\t--regi" +
                    "on Loading document\'s properties\r\n\tSELECT \r\n\t\t@DocumentVersionStateID = dbo.Mult" +
                    "iversionDocument_DocumentVersion.DocumentVersionStateID,\r\n\t\t@DocumentID = dbo.Mu" +
                    "ltiversionDocument_DocumentVersion.DocumentID,\r\n\t\t@DocumentStateID = dbo.Multive" +
                    "rsionDocument_Document.DocumentStateID, \r\n\t\t@CurrentVersionID = dbo.Multiversion" +
                    "Document_Document.CurrentVersionID\r\n\tFROM dbo.MultiversionDocument_DocumentVersi" +
                    "on\r\n\t\tINNER JOIN dbo.MultiversionDocument_Document ON dbo.MultiversionDocument_D" +
                    "ocumentVersion.DocumentID = dbo.MultiversionDocument_Document.ID\r\n\tWHERE dbo.Mul" +
                    "tiversionDocument_DocumentVersion.ID = @VersionID;\r\n\t--endregion\r\n\r\n\t--region De" +
                    "leting child objects\r\n\t");
            
            #line 902 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

		child_objects = GetChildObjectList();
		if (child_objects != null)
		{
			foreach (ChildObject child_object in child_objects)
				if (child_object != null && child_object.DeleteByParentObjectProcedureName != String.Empty)
				{
	
            
            #line default
            #line hidden
            this.Write("\texec dbo.");
            
            #line 910 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(child_object.DeleteByParentObjectProcedureName));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t@DocumentVersionID = @VersionID,\r\n\t\t@ErrorMessages = null\r\n\t\t;\r\n\t");
            
            #line 914 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

				}
		}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\r\n\t--region Deleting document version\r\n\tDELETE FROM ");
            
            #line 921 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" WHERE ");
            
            #line 921 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(@".ID = @VersionID;
	
	IF @DocumentStateID = 0
	begin
		UPDATE dbo.MultiversionDocument_Document
		SET dbo.MultiversionDocument_Document.CurrentVersionID = null
		WHERE dbo.MultiversionDocument_Document.ID = @DocumentID;
	end
	
	DELETE FROM dbo.MultiversionDocument_DocumentVersion WHERE dbo.MultiversionDocument_DocumentVersion.ID = @VersionID;
	--endregion

	--region Deleting document if it's creation was unconfirmed
	IF @DocumentStateID = 0
	begin
		DELETE FROM dbo.MultiversionDocument_Document WHERE dbo.MultiversionDocument_Document.ID = @DocumentID;
	end
	--endregion

	IF @StartTransaction = 1
	begin
		COMMIT TRAN;
	end
end try
begin catch
	SELECT @ErrorMessage = error_message(), @ErrorSeverity = error_severity(), @ErrorState = error_state();
	SET @КодОшибки = -1;
	
	IF xact_state() <> 0 and @StartTransaction = 1
	begin
		ROLLBACK TRAN;
	end

	RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
end catch

ENDPROC:
	return (@КодОшибки);
end
GO
--endregion

--region Delete
");
            
            #line 964 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DatabaseSchema.StoredProcedures.Contains(GetProcedureName("Delete")) ? "ALTER" : "CREATE"));
            
            #line default
            #line hidden
            this.Write(" PROCEDURE [dbo].[");
            
            #line 964 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("Delete")));
            
            #line default
            #line hidden
            this.Write(@"]
	@DocumentID int
AS
begin

SET NOCOUNT ON;

--region Declarations
declare @ErrorMessage nvarchar(4000), @ErrorSeverity int, @ErrorState int;
declare @StartTransaction bit;
declare @КодОшибки int;
--endregion

SET @КодОшибки = 0;
SET @StartTransaction = 0;

begin try
	--region Checks
	IF (@DocumentID is null) 
	begin
		RAISERROR('Parameter @DocumentID is set to NULL', 16, -1);
	end
	
	IF not exists(SELECT 0 FROM dbo.MultiversionDocument_Document WHERE dbo.MultiversionDocument_Document.ID = @DocumentID)
	begin 
		SET @ErrorMessage = 'Error deleting document - there is no such a document. @DocumentID = ' + cast(@DocumentID as varchar(40));
		RAISERROR(@ErrorMessage, 16, -1);
	end
	--endregion

	IF @@trancount = 0
	begin
		BEGIN TRAN;
		SET @StartTransaction = 1;
	end

	--region Changing document state to 'deleted'
	UPDATE dbo.MultiversionDocument_Document 
	SET dbo.MultiversionDocument_Document.DocumentStateID = 100 
	WHERE dbo.MultiversionDocument_Document.ID = @DocumentID;
	--endregion

	IF @StartTransaction = 1
	begin
		COMMIT TRAN;
	end
end try
begin catch
	SELECT @ErrorMessage = error_message(), @ErrorSeverity = error_severity(), @ErrorState = error_state();
	SET @КодОшибки = -1;
	
	IF xact_state() <> 0 and @StartTransaction = 1
	begin
		ROLLBACK TRAN;
	end
	
	RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
end catch

ENDPROC:
	return (@КодОшибки);
end
GO
--endregion

--region Load
");
            
            #line 1030 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DatabaseSchema.StoredProcedures.Contains(GetProcedureName("Load")) ? "ALTER" : "CREATE"));
            
            #line default
            #line hidden
            this.Write(" PROCEDURE [dbo].[");
            
            #line 1030 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("Load")));
            
            #line default
            #line hidden
            this.Write("]\r\n\t@DocumentID int,\r\n\t@CurrentVersionID int OUTPUT,\r\n");
            
            #line 1033 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

	str_and = "";
	foreach (ViewColumnSchema column in viewSchema.Columns)
		if (!tableSchema.PrimaryKey.Contains(column.Name) && column.Name != "DocumentVersionID")
		{
			Write(str_and + "	" + GetParameterDeclaration(column, true));
			str_and = "," + Environment.NewLine;
		}
	Write(Environment.NewLine);
	
            
            #line default
            #line hidden
            this.Write(@"AS
begin

SET NOCOUNT ON;

--region Declarations
declare @ErrorMessage nvarchar(4000), @ErrorSeverity int, @ErrorState int;
declare @КодОшибки int;
--endregion

SET @КодОшибки = 0;

begin try
	--region Checks
	IF @DocumentID is null
	begin
		RAISERROR('Parameter @DocumentID is set to NULL', 16, -1);
	end
	
	IF not exists(SELECT 0 FROM dbo.MultiversionDocument_Document WHERE dbo.MultiversionDocument_Document.ID = @DocumentID)
	begin 
		SET @ErrorMessage = 'Error loading document - document not found. ID = ' + cast(@DocumentID as varchar(40));
		RAISERROR(@ErrorMessage, 16, -1);
	end
	--endregion

	--region Loading document attributes
	SELECT
		@CurrentVersionID = dbo.MultiversionDocument_Document.CurrentVersionID
	");
            
            #line 1072 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

		str_and = "," + Environment.NewLine;
		foreach (ViewColumnSchema column in viewSchema.Columns)
			if
			(
				!tableSchema.PrimaryKey.Contains(column.Name)
			)
			{
				Write(str_and + "	@" + column.Name + " = " + viewSchema.Name + "." + column.Name);
			}
		
            
            #line default
            #line hidden
            this.Write("\t\tFROM dbo.MultiversionDocument_Document\r\n\t\t\tLEFT JOIN ");
            
            #line 1084 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(viewSchema.Name));
            
            #line default
            #line hidden
            this.Write(" ON dbo.MultiversionDocument_Document.CurrentVersionID = ");
            
            #line 1084 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(viewSchema.Name));
            
            #line default
            #line hidden
            this.Write(@".ID
		WHERE dbo.MultiversionDocument_Document.ID = @DocumentID;
	--endregion
end try
begin catch
    SELECT @ErrorMessage = error_message(), @ErrorSeverity = error_severity(), @ErrorState = error_state();
	SET @КодОшибки = -1;
    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
end catch

ENDPROC:
	return (@КодОшибки);
end
GO
--endregion

--region Commit
--region Delegate BeforeCommit
");
            
            #line 1102 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

	if (BeforeCommit)
	{

            
            #line default
            #line hidden
            this.Write("IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N\'");
            
            #line 1106 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("BeforeCommit")));
            
            #line default
            #line hidden
            this.Write("\') AND OBJECTPROPERTY(id, N\'IsProcedure\') = 1)\r\nEXEC\r\n(\'\r\nCREATE PROCEDURE dbo.[");
            
            #line 1109 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("BeforeCommit")));
            
            #line default
            #line hidden
            this.Write("]\r\n\t@DocumentID int,\r\n\t@ErrorMessages xml OUTPUT\r\nAS\r\nbegin\r\n\r\nSET NOCOUNT ON;\r\n\r" +
                    "\n--declare @ErrorList table(Message varchar(2000),AttributeName varchar(128),Att" +
                    "ributeFriendlyName varchar(200),Severity int);\r\n--declare @StartTransaction bit;" +
                    "\r\n--declare @ErrorMessage nvarchar(4000), @ErrorSeverity int, @ErrorState int;\r\n" +
                    "--declare @КодОшибки int;\r\n\r\n--SET @КодОшибки = 0;\r\n\r\n--\tINSERT @ErrorList (Mess" +
                    "age, AttributeName, AttributeFriendlyName, Severity)\r\n--\tSELECT\r\n--\t\t\'\'Error Mes" +
                    "sage\'\',\r\n--\t\tNULL,\r\n--\t\tNULL,\r\n--\t\t2\r\n--\t;\r\n\r\n--IF not exists(SELECT 1 FROM @Err" +
                    "orList as q1 WHERE q1.Severity >= 2)\r\n--begin\r\n--\tSET @StartTransaction = 0;\r\n\r\n" +
                    "--\tbegin try\r\n--\t\tIF @@trancount = 0\r\n--\t\tbegin\r\n--\t\t\tBEGIN TRAN;\r\n--\t\t\tSET @Sta" +
                    "rtTransaction = 1;\r\n--\t\tend\r\n\r\n--\t\tIF @StartTransaction = 1\r\n--\t\tbegin\r\n--\t\t\tCOM" +
                    "MIT TRAN;\r\n--\t\tend\r\n--\tend try\r\n--\tbegin catch\r\n--\t\tSELECT @ErrorMessage = error" +
                    "_message(), @ErrorSeverity = error_severity(), @ErrorState = error_state();\r\n--\t" +
                    "\tSET @КодОшибки = -1;\r\n\r\n--\t\tIF xact_state() <> 0 and @StartTransaction = 1\r\n--\t" +
                    "\tbegin\r\n--\t\t\tROLLBACK TRAN;\r\n--\t\tend\r\n\r\n--\t\tRAISERROR (@ErrorMessage, @ErrorSeve" +
                    "rity, @ErrorState);\r\n--\tend catch\r\n--end\r\n\r\n--IF @КодОшибки <> -1\r\n--begin\r\n--\tS" +
                    "ELECT TOP 1 @КодОшибки = EL.Severity\r\n--\tFROM @ErrorList as EL\r\n--\tORDER BY EL.S" +
                    "everity desc;\r\n--end\r\n\r\nENDPROC:\r\n--\tSET @ErrorMessages =\r\n--\t\t\t\t(\r\n--\t\t\t\t\tSELEC" +
                    "T Message, AttributeName, AttributeFriendlyName, Severity\r\n--\t\t\t\t\tFROM @ErrorLis" +
                    "t AS EL\r\n--\t\t\t\t\tORDER BY EL.Severity DESC, EL.AttributeName\r\n--\t\t\t\t\tFOR XML RAW(" +
                    "\'\'row\'\'), ROOT (\'\'root\'\')\r\n--\t\t\t\t);\r\n--\treturn (@КодОшибки);\r\nend\r\n\')\r\nGO\r\n");
            
            #line 1180 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

	}

            
            #line default
            #line hidden
            this.Write("--endregion\r\n\r\n--region Delegate OnCommit\r\nIF NOT EXISTS (SELECT * FROM dbo.sysob" +
                    "jects WHERE id = object_id(N\'");
            
            #line 1186 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("OnCommit")));
            
            #line default
            #line hidden
            this.Write("\') AND OBJECTPROPERTY(id, N\'IsProcedure\') = 1)\r\nEXEC\r\n(\'\r\nCREATE PROCEDURE dbo.[");
            
            #line 1189 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("OnCommit")));
            
            #line default
            #line hidden
            this.Write(@"]
	@DocumentID int
AS
begin

SET NOCOUNT ON;

--declare @StartTransaction bit;
--declare @ErrorMessage nvarchar(4000), @ErrorSeverity int, @ErrorState int;
--declare @КодОшибки int;

--SET @КодОшибки = 0;
--SET @StartTransaction = 0;

--begin try
--	IF @@trancount = 0
--	begin
--		BEGIN TRAN;
--		SET @StartTransaction = 1;
--	end

--	IF @StartTransaction = 1
--	begin
--		COMMIT TRAN;
--	end
--end try
--begin catch
--	SELECT @ErrorMessage = error_message(), @ErrorSeverity = error_severity(), @ErrorState = error_state();
--	SET @КодОшибки = -1;

--	IF xact_state() <> 0 and @StartTransaction = 1
--	begin
--		ROLLBACK TRAN;
--	end
	
--	RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
--end catch

ENDPROC:
--	return (@КодОшибки);
end
')
GO

--endregion

--region Method Stored Procedure
");
            
            #line 1236 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DatabaseSchema.StoredProcedures.Contains(GetProcedureName("Commit")) ? "ALTER" : "CREATE"));
            
            #line default
            #line hidden
            this.Write(" PROCEDURE [dbo].[");
            
            #line 1236 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("Commit")));
            
            #line default
            #line hidden
            this.Write(@"]
	@DocumentID int,
	@ErrorMessages xml OUTPUT
AS
begin

SET NOCOUNT ON;

--region Declarations
declare @ErrorList table(Message varchar(2000),AttributeName varchar(128),AttributeFriendlyName varchar(200),Severity int);
declare @ErrorMessage nvarchar(4000), @ErrorSeverity int, @ErrorState int;
declare @StartTransaction bit;
declare @КодОшибки int;

declare @DocumentStateID int;
declare @VersionID int
declare @ExistsLogicalErrors bit;
--endregion

SET @КодОшибки = 0;
SET @StartTransaction = 0;
SET @ExistsLogicalErrors = 0;

begin try
	--region Checks
	--region Loading Document parameters
	SELECT @DocumentStateID = dbo.MultiversionDocument_Document.DocumentStateID,
		@VersionID = dbo.MultiversionDocument_Document.CurrentVersionID
	FROM dbo.MultiversionDocument_Document 
	WHERE dbo.MultiversionDocument_Document.ID = @DocumentID;
	--endregion
	
	--region Checking CurrentVersionID
	IF @VersionID is null
	begin
		SET @ErrorMessage = 'У указанного документа не найдена актуальная версия.';
		RAISERROR(@ErrorMessage, 16, -1);
	end
	--endregion
	
	--region Checking DocumentStateID
	IF (@DocumentStateID != 1)
	begin
		SET @ErrorMessage = 'Error committing the document. Document must have ''confirmed'' status to be committed';
		RAISERROR(@ErrorMessage, 16, -2);
	end	
	--endregion

	--endregion

	IF @@trancount = 0
	begin
		BEGIN TRAN;
		SET @StartTransaction = 1;
	end

	--region Call of BeforeCommit
	");
            
            #line 1293 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

	if (BeforeCommit)
		{
	
            
            #line default
            #line hidden
            this.Write("\texec dbo.");
            
            #line 1297 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("BeforeCommit")));
            
            #line default
            #line hidden
            this.Write(@"
		@DocumentID = @DocumentID,
		@ErrorMessages = @ErrorMessages OUTPUT
		;
		
	INSERT @ErrorList (Message, AttributeName, AttributeFriendlyName, Severity)
	SELECT b.value('@Message' , 'varchar(2000)') as Сообщение, 
		b.value('@AttributeName' , 'varchar(128)') as ИмяАтрибута,
		b.value('@AttributeFriendlyName' , 'varchar(200)') as ПсевдонимАтрибута,
		b.value('@Severity' , 'int') as СуровостьОшибки
	FROM @ErrorMessages.nodes('/root/row') a(b);
	
	");
            
            #line 1309 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

		}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\t\r\n\t\r\n\t--region Checking attributes for NOT NULL\r\n\t");
            
            #line 1315 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

	foreach (TableColumnSchema column in tableSchema.Columns)
		if (!column.IsIdentity && column.Name != "DocumentVersionID" && !HeaderColumnIsNullable(column.Name))
		{ 
            
            #line default
            #line hidden
            this.Write("\tINSERT @ErrorList (Message, AttributeName, AttributeFriendlyName, Severity)\r\n\tSE" +
                    "LECT \'Не заполнен атрибут документа: ");
            
            #line 1320 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\'");
            
            #line 1321 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t\'");
            
            #line 1322 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("\',\r\n\t\t2\r\n\tFROM ");
            
            #line 1324 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(" \r\n\tWHERE ");
            
            #line 1325 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(".ID = @VersionID \r\n\t\tand ");
            
            #line 1326 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableSchema.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 1326 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write(" is null\r\n\t;\r\n\t\t");
            
            #line 1328 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

		}
		
            
            #line default
            #line hidden
            this.Write("\t--endregion\r\n\t\r\n\tIF exists(SELECT 1 FROM @ErrorList as EL WHERE EL.Severity >=2)" +
                    "\r\n\tbegin\r\n\t\tSET @ExistsLogicalErrors = 1;\r\n\t\tRAISERROR(\'Exists critical error.\'," +
                    "16,-1);\r\n\tend\r\n\t\r\n\t--region Call of OnCommit\r\n\texec dbo.");
            
            #line 1340 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("OnCommit")));
            
            #line default
            #line hidden
            this.Write(@"
		@DocumentID = @DocumentID
		;
	--endregion

	--region Changing document's status to 'committed'
	UPDATE dbo.MultiversionDocument_Document 
	SET dbo.MultiversionDocument_Document.DocumentStateID = 2 
	WHERE dbo.MultiversionDocument_Document.ID = @DocumentID;
	--endregion

	IF @StartTransaction = 1
	begin
		COMMIT TRAN;
	end
end try
begin catch
	SELECT @ErrorMessage = error_message(), @ErrorSeverity = error_severity(), @ErrorState = error_state();
	
	IF @ExistsLogicalErrors = 0
	begin
		SET @КодОшибки = -1;
	end
	
	IF xact_state() <> 0 and @StartTransaction = 1
	begin
		ROLLBACK TRAN;
	end
	
	IF @ExistsLogicalErrors = 0
	begin
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	end
end catch

IF @КодОшибки <> -1
begin
	SELECT TOP 1 @КодОшибки = EL.Severity
	FROM @ErrorList as EL
	ORDER BY EL.Severity desc;
end

ENDPROC:
	SET @ErrorMessages =
				(
					SELECT Message, AttributeName, AttributeFriendlyName, Severity
					FROM @ErrorList AS EL
					ORDER BY EL.Severity DESC, EL.AttributeName
					FOR XML RAW('row'), ROOT ('root')
				);
	return (@КодОшибки);
end
GO
--endregion

--endregion

--region Rollback
--region Delegate BeforeRollback
");
            
            #line 1399 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

	if (BeforeRollback)
	{

            
            #line default
            #line hidden
            this.Write("IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N\'");
            
            #line 1403 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("BeforeRollback")));
            
            #line default
            #line hidden
            this.Write("\') AND OBJECTPROPERTY(id, N\'IsProcedure\') = 1)\r\nEXEC\r\n(\'\r\nCREATE PROCEDURE dbo.[");
            
            #line 1406 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("BeforeRollback")));
            
            #line default
            #line hidden
            this.Write("]\r\n\t@DocumentID int,\r\n\t@ErrorMessages xml OUTPUT\r\nAS\r\nbegin\r\n\r\nSET NOCOUNT ON;\r\n\r" +
                    "\n--declare @ErrorList table(Message varchar(2000),AttributeName varchar(128),Att" +
                    "ributeFriendlyName varchar(200),Severity int);\r\n--declare @StartTransaction bit;" +
                    "\r\n--declare @ErrorMessage nvarchar(4000), @ErrorSeverity int, @ErrorState int;\r\n" +
                    "--declare @КодОшибки int;\r\n\r\n--SET @КодОшибки = 0;\r\n\r\n--\tINSERT @ErrorList (Mess" +
                    "age, AttributeName, AttributeFriendlyName, Severity)\r\n--\tSELECT\r\n--\t\t\'\'Error Mes" +
                    "sage\'\',\r\n--\t\tNULL,\r\n--\t\tNULL,\r\n--\t\t2\r\n--\t;\r\n\r\n--IF not exists(SELECT 1 FROM @Err" +
                    "orList as q1 WHERE q1.Severity >= 2)\r\n--begin\r\n--\tSET @StartTransaction = 0;\r\n\r\n" +
                    "--\tbegin try\r\n--\t\tIF @@trancount = 0\r\n--\t\tbegin\r\n--\t\t\tBEGIN TRAN;\r\n--\t\t\tSET @Sta" +
                    "rtTransaction = 1;\r\n--\t\tend\r\n\r\n--\t\tIF @StartTransaction = 1\r\n--\t\tbegin\r\n--\t\t\tCOM" +
                    "MIT TRAN;\r\n--\t\tend\r\n--\tend try\r\n--\tbegin catch\r\n--\t\tSELECT @ErrorMessage = error" +
                    "_message(), @ErrorSeverity = error_severity(), @ErrorState = error_state();\r\n--\t" +
                    "\tSET @КодОшибки = -1;\r\n\r\n--\t\tIF xact_state() <> 0 and @StartTransaction = 1\r\n--\t" +
                    "\tbegin\r\n--\t\t\tROLLBACK TRAN;\r\n--\t\tend\r\n\r\n--\t\tRAISERROR (@ErrorMessage, @ErrorSeve" +
                    "rity, @ErrorState);\r\n--\tend catch\r\n--end\r\n\r\n--IF @КодОшибки <> -1\r\n--begin\r\n--\tS" +
                    "ELECT TOP 1 @КодОшибки = EL.Severity\r\n--\tFROM @ErrorList as EL\r\n--\tORDER BY EL.S" +
                    "everity desc;\r\n--end\r\n\r\nENDPROC:\r\n--\tSET @ErrorMessages =\r\n--\t\t\t\t(\r\n--\t\t\t\t\tSELEC" +
                    "T Message, AttributeName, AttributeFriendlyName, Severity\r\n--\t\t\t\t\tFROM @ErrorLis" +
                    "t AS EL\r\n--\t\t\t\t\tORDER BY EL.Severity DESC, EL.AttributeName\r\n--\t\t\t\t\tFOR XML RAW(" +
                    "\'\'row\'\'), ROOT (\'\'root\'\')\r\n--\t\t\t\t);\r\n--\treturn (@КодОшибки);\r\nend\r\n\')\r\nGO\r\n");
            
            #line 1477 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

	}

            
            #line default
            #line hidden
            this.Write("--endregion\r\n\r\n--region Delegate OnRollback\r\nIF NOT EXISTS (SELECT * FROM dbo.sys" +
                    "objects WHERE id = object_id(N\'");
            
            #line 1483 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("OnRollback")));
            
            #line default
            #line hidden
            this.Write("\') AND OBJECTPROPERTY(id, N\'IsProcedure\') = 1)\r\nEXEC\r\n(\'\r\nCREATE PROCEDURE dbo.[");
            
            #line 1486 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("OnRollback")));
            
            #line default
            #line hidden
            this.Write(@"]
	@DocumentID int
AS
begin

SET NOCOUNT ON;

--declare @StartTransaction bit;
--declare @ErrorMessage nvarchar(4000), @ErrorSeverity int, @ErrorState int;
--declare @КодОшибки int;

--SET @КодОшибки = 0;
--SET @StartTransaction = 0;

--begin try
--	IF @@trancount = 0
--	begin
--		BEGIN TRAN;
--		SET @StartTransaction = 1;
--	end

--	IF @StartTransaction = 1
--	begin
--		COMMIT TRAN;
--	end
--end try
--begin catch
--	SELECT @ErrorMessage = error_message(), @ErrorSeverity = error_severity(), @ErrorState = error_state();
--	SET @КодОшибки = -1;

--	IF xact_state() <> 0 and @StartTransaction = 1
--	begin
--		ROLLBACK TRAN;
--	end
	
--	RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
--end catch

ENDPROC:
--	return (@КодОшибки);
end
')
GO

--endregion

--region Method Stored Procedure
");
            
            #line 1533 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DatabaseSchema.StoredProcedures.Contains(GetProcedureName("Rollback")) ? "ALTER" : "CREATE"));
            
            #line default
            #line hidden
            this.Write(" PROCEDURE [dbo].[");
            
            #line 1533 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("Rollback")));
            
            #line default
            #line hidden
            this.Write(@"]
	@DocumentID int,
	@ErrorMessages xml OUTPUT
AS
begin

SET NOCOUNT ON;

--region Declarations
declare @ErrorList table(Message varchar(2000),AttributeName varchar(128),AttributeFriendlyName varchar(200),Severity int);
declare @ErrorMessage nvarchar(4000), @ErrorSeverity int, @ErrorState int;
declare @StartTransaction bit;
declare @КодОшибки int;

declare @DocumentStateID int;
declare @VersionID int
declare @ExistsLogicalErrors bit;
--endregion

SET @КодОшибки = 0;
SET @StartTransaction = 0;
SET @ExistsLogicalErrors = 0;

begin try
	--region Checks
	--region Loading Document parameters
	SELECT @DocumentStateID = dbo.MultiversionDocument_Document.DocumentStateID,
		@VersionID = dbo.MultiversionDocument_Document.CurrentVersionID
	FROM dbo.MultiversionDocument_Document 
	WHERE dbo.MultiversionDocument_Document.ID = @DocumentID;
	--endregion
	
	--region Checking CurrentVersionID
	IF @VersionID is null
	begin
		SET @ErrorMessage = 'У указанного документа не найдена актуальная версия.';
		RAISERROR(@ErrorMessage, 16, -1);
	end
	--endregion
	
	--region Checking DocumentStateID
	IF (@DocumentStateID != 2)
	begin
		SET @ErrorMessage = 'Error committing the document. Document must have ''confirmed'' status to be committed';
		RAISERROR(@ErrorMessage, 16, -2);
	end	
	--endregion
	--endregion
	
	IF @@trancount = 0
	begin
		BEGIN TRAN;
		SET @StartTransaction = 1;
	end
	
	--region Call of BeforeRollback
	");
            
            #line 1589 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

	if (BeforeRollback)
		{
	
            
            #line default
            #line hidden
            this.Write("\texec dbo.");
            
            #line 1593 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("BeforeRollback")));
            
            #line default
            #line hidden
            this.Write(@"
		@DocumentID = @DocumentID,
		@ErrorMessages = @ErrorMessages OUTPUT
		;
		
	INSERT @ErrorList (Message, AttributeName, AttributeFriendlyName, Severity)
	SELECT b.value('@Message' , 'varchar(2000)') as Сообщение, 
		b.value('@AttributeName' , 'varchar(128)') as ИмяАтрибута,
		b.value('@AttributeFriendlyName' , 'varchar(200)') as ПсевдонимАтрибута,
		b.value('@Severity' , 'int') as СуровостьОшибки
	FROM @ErrorMessages.nodes('/root/row') a(b);
	
	");
            
            #line 1605 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"

		}
	
            
            #line default
            #line hidden
            this.Write("\t--endregion\t\r\n\t\r\n\tIF exists(SELECT 1 FROM @ErrorList as EL WHERE EL.Severity >=2" +
                    ")\r\n\tbegin\r\n\t\tSET @ExistsLogicalErrors = 1;\r\n\t\tRAISERROR(\'Exists critical error.\'" +
                    ",16,-1);\r\n\tend\r\n\t\r\n\t--region Call of OnRollback\r\n\texec dbo.");
            
            #line 1617 "W:\Projects\Swiftshot\Application\VS2010\EntityManagement\JetBat.Metadata\Templates\MultiversionDocument\MultiversionDocumentStoredProcedureTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetProcedureName("OnRollback")));
            
            #line default
            #line hidden
            this.Write(@"
		@DocumentID = @DocumentID
		;
	--endregion

	--region Updating document status to 'uncommitted'
	UPDATE dbo.MultiversionDocument_Document 
	SET dbo.MultiversionDocument_Document.DocumentStateID = 1 
	WHERE dbo.MultiversionDocument_Document.ID = @DocumentID
	--endregion

	IF @StartTransaction = 1
	begin
		COMMIT TRAN;
	end
end try
begin catch
	SELECT @ErrorMessage = error_message(), @ErrorSeverity = error_severity(), @ErrorState = error_state();
	
	IF @ExistsLogicalErrors = 0
	begin
		SET @КодОшибки = -1;
	end
	
	IF xact_state() <> 0 and @StartTransaction = 1
	begin
		ROLLBACK TRAN;
	end
	
	IF @ExistsLogicalErrors = 0
	begin
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	end
end catch

IF @КодОшибки <> -1
begin
	SELECT TOP 1 @КодОшибки = EL.Severity
	FROM @ErrorList as EL
	ORDER BY EL.Severity desc;
end

ENDPROC:
	SET @ErrorMessages =
				(
					SELECT Message, AttributeName, AttributeFriendlyName, Severity
					FROM @ErrorList AS EL
					ORDER BY EL.Severity DESC, EL.AttributeName
					FOR XML RAW('row'), ROOT ('root')
				);
	return (@КодОшибки);
end
GO
--endregion

--endregion");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")]
    public class MultiversionDocumentStoredProcedureTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
    }
    #endregion
}
